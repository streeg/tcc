continue
quit
extract_and_format_name_sarif(lib_file_name)
extract_and_format_name_sarif(lib_file_name).eql?("cryptoguard-sarif/de.varengold.activeTAN_34-debug.apk-sarif.json")
"cryptoguard-sarif/de.varengold.activeTAN_34-debug.apk-sarif.json"
File.open("cryptoguard-sarif/de.varengold.activeTAN_34-debug.apk-sarif.json", 'r')
"cryptoguard-sarif/de.varengold.activeTAN_34-debug.apk-sarif.json"
extract_and_format_name_sarif(lib_file_name).eql?("cryptoguard-sarif/de.varengold.activeTAN_34-debug.apk-sarif.json")
"cryptoguard-sarif/de.varengold.activeTAN_34-debug.apk-sarif.json"
extract_and_format_name_sarif(lib_file_name)
File.open("cryptoguard-sarif/de.varengold.activeTAN_34-debug.apk-sarif.json", 'r')
File.open("cryptoguard-sarif/", 'r')
File.open("cryptoguard-sarif", 'r')
File.open("cryptoguard-saraif", 'r')
extract_and_format_name_sarif(lib_file_name)
Dir
DIR
File.open(extract_and_format_name_sarif(lib_file_name), 'r')
continue
extract_and_format_name_sarif(lib_file_name)
next
continue
extract_and_format_name_sarif(lib_file_name)
quit
extract_and_format_name_sarif(lib_file_name)
quit
result
lib_file_data_item['Package']
continue
lib_file_data_item['Package']
continue
lib_file_data_item['Package']
continue
lib_file_data_item['Package']
next
lib_file_data_item['Package']
next
lib_file_data_item['Package']
result
quit
external_library
quit
external_library
quit
result
results
lib_file_data[0]
lib_file_data[0]['Package']
lib_file_data[2]
lib_file_data[1]
lib_file_data[0]
lib_file_data
quit
results[0].include?("com.google.android.gms")
results.each { |x| x.gsub!(' ', '.') }
results
results.collect { |v| [library, v] }
results.collect
results.flatten
array.flatten
results
results[0].split[0]
results[0].split
results[0]
results[0][0]
results[0].split
results[0]
results.each { |x| x.gsub!('.', ' ') }
results[0]
results[0].splice
results[0].slice(3)
results[0]
results.each { |x| x.gsub!('/', '.') }
results.each { |x| x.gsub('/', '.') }
results[0].gsub('/', '.')
results[0]
results.each { |x| x.gsub('\/', '.') }
results.each { |x| x.gsub("\/", ".") }
results = results.each { |x| x.gsub("\/", ".") }
results
results = results.each { |x| x.gsub("/", ".") }
results.each { |x| x.gsub("/", ".") }
results.gsub("/", ".")
results
quit
crypto_file_data['runs'][0]['results'].each { |x| p x['locations'][0]['physicalLocation']['fileLocation']['uri'] }
crypto_file_data['runs'][0]['results'].each { |x| p x['locations'][0]['physicalLocation']['fileLocation'] }
crypto_file_data['runs'][0]['results'].each { |x| p x['locations'][0]['physicalLocation'][0] }
crypto_file_data['runs'][0]['results'].each { |x| p x['locations'][0]['physicalLocation'] }
crypto_file_data['runs'][0]['results'].each { |x| p x['locations']['physicalLocation'] }
crypto_file_data['runs'][0]['results'].each { |x| p x['locations'] }
crypto_file_data['runs'][0]['results'].each { |x| p x }
crypto_file_data['runs'][0]['results'].each { |x| p x[0]['locations'] }
crypto_file_data['runs'][0]['results'].each { |x| p x[0][0] }
crypto_file_data['runs'][0]['results'].each { |x| p x[0] }
crypto_file_data['runs'][0]['results'].each { |x| p x[0][0]['physicalLocation']['fileLocation']['uri'] }
crypto_file_data['runs'][0]['results'].each_slice(3) { |x| p x[1][0]['physicalLocation']['fileLocation']['uri'] }
crypto_file_data['runs'][0]['results'].each { |x| p x[1][0]['physicalLocation']['fileLocation']['uri'] }
crypto_file_data['runs'][0]['results'].each { |x| p x }
crypto_file_data['runs'][0]['results']
quit
results
quit
results
next
result_crypto_file_data_size
next
results
next
continue
destructuring
next
destructuring
quit
destructuring
next
destructuring[1][0]['physicalLocation']['fileLocation']['uri']
destructuring
_garbage
next
destructuring
quit
continue
destructuring
destructuring[1][0]['physicalLocation']['fileLocation']['uri']
results
next
results
destructuring[1][0]['physicalLocation']['fileLocation']['uri']
continue
uri[1][0]["physicalLocation"]["fileLocation"]["uri"]
uri[1][0]["physicalLocation"]["fileLocation"]
uri[1][0]["physicalLocation"]
uri[1][0]
uri[1][0][0]
uri[1][0][1]
uri[1][0]
uri[1]['physicalLocaltion']
uri[1]
uri[0]
uri['locations']
uri['locations'][0]['physicalLocation']['fileLocation']['uri']
uri
next
quit
crypto_file_data['runs'][0]["results"].each { |x| p x["locations"][0]["physicalLocation"]["fileLocation"]["uri"]}
continue
crypto_file_data['runs'][0]["results"].each { |x| p x.["locations"][0]["physicalLocation"]["fileLocation"]["uri"]}
crypto_file_data['runs'][0]["results"].each { |x| p x.['locations'][0]["physicalLocation"]["fileLocation"]["uri"]}
crypto_file_data['runs'][0]["results"][0]['locations'][0]["physicalLocation"]["fileLocation"]["uri"]
crypto_file_data['runs'][0]["results"][0]['locations'][0]["physicalLocation"]["fileLocation"]
crypto_file_data['runs'][0]["results"][0]['locations'][0]["physicalLocation"]
crypto_file_data['runs'][0]["results"][0]['locations'][0]
crypto_file_data['runs'][0]["results"][0]['locations']
crypto_file_data['runs'][0]["results"][0]['locations'][0]['fileLocation']
crypto_file_data['runs'][0]["results"][0]['locations'][0]['fileLocation]
crypto_file_data['runs'][0]["results"][0]['locations'][0]
crypto_file_data['runs'][0]["results"][0]['locations']['physicalLocation']
crypto_file_data['runs'][0]["results"][0]['locations']
crypto_file_data['runs'][0]["results"][0]
crypto_file_data['runs'][0]["results"][18]
crypto_file_data['runs'][0]["results"].size
crypto_file_data['runs'][0]["results"][2]
crypto_file_data['runs'][0]["results"][1]["locations"]
crypto_file_data['runs'][0]["results"][0]["locations"]
crypto_file_data['runs'][0]["results"]["locations"]
crypto_file_data['runs'][0]["results"]
crypto_file_data['runs']
crypto_file_data
crypto_file_data.flatten.runs
crypto_file_data.flatten
crypto_file_data['runs']
crypto_file_data['runs'][:results]
crypto_file_data['runs'].results
crypto_file_data['runs']['results'.to_i]
crypto_file_data['runs']['results']
crypto_file_data['runs'][2]
crypto_file_data['runs'][1]
crypto_file_data['runs'][0]
crypto_file_data['runs']
crypto_file_data['runs'].results
crypto_file_data['runs']['results']
crypto_file_data['runs'][results]
crypto_file_data['runs']
crypto_file_data[runs]
crypto_file_data.runs
crypto_file_data.each {|x| p x}
crypto_file_data.flatten[2]
crypto_file_data.flatten[1]
crypto_file_data.flatten[0]
crypto_file_data.flatten
crypto_file_data
crypto_file_data.flatten.last
crypto_file_data.flatten.first
crypto_file_data.flatten
crypto_file_data.last
crypto_file_data.first
crypto_file_data
crypto_file_data[:results]
crypto_file_data
crypto_file_data.size
crypto_file_data[0]
continue
crypto_file_data[0]
crypto_file_data[1]
crypto_file_data.size
crypto_file_data['results']
crypto_file_data[results]
crypto_file_data[0]
crypto_file_data
lib_file.results
continue
JSON.load(crypto_file)continue
JSON.load(crypto_file)
JSON.parse(crypto_file)
JSON.load(crypto_file)
crypto_file
crypto_file_data
quit
file.open(extract_and_format_name_sarif(lib_file_name), 'w')
extract_and_format_name_sarif(lib_file_name)
quit
lib_file_name
quit
extract_and_format_name_sarif(lib_file_name)
quit
extract_and_format_name_sarif(lib_file)
continue
lib_file_data.each {|x| p x["Library"]}
lib_file_data[0]["Library"]
lib_file_data[0].Library
lib_file_data[0]
lib_file_data.each {|x| p x.Package}
lib_file_data.each {|x| p x["Package"]}
lib_file_data.each {|x| p x[:Package]}
lib_file_data.each {|x| p x}
lib_file_data.each {|x| p x.Package}
lib_file_data.size
lib_file_data[0]
lib_file_data[:Package]
lib_file_data["Package"]
lib_file_data
