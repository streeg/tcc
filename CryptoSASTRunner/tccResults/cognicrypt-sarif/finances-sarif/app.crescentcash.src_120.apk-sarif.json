{
  "sarifVersion" : "2.0.0",
  "runs" : [ {
    "files" : {
      "org/bitcoinj/script/Script.java" : {
        "mimeType" : "text/java"
      },
      "org/bouncycastle/x509/AttributeCertificateHolder.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/protocols/payments/PaymentProtocol.java" : {
        "mimeType" : "text/java"
      },
      "okio/ByteString.java" : {
        "mimeType" : "text/java"
      },
      "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateImpl.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/crypto/X509Utils.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/core/bip47/BIP47PaymentCode.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/crypto/BIP47SecretPoint.java" : {
        "mimeType" : "text/java"
      },
      "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/crypto/MnemonicCode.java" : {
        "mimeType" : "text/java"
      },
      "com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.java" : {
        "mimeType" : "text/java"
      },
      "app/crescentcash/src/hash/HashHelper$Companion.java" : {
        "mimeType" : "text/java"
      },
      "dummyMainClass.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/crypto/PBKDF2SHA512.java" : {
        "mimeType" : "text/java"
      },
      "org/bouncycastle/jce/provider/X509SignatureUtil.java" : {
        "mimeType" : "text/java"
      },
      "com/google/common/hash/MacHashFunction.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/core/CheckpointManager.java" : {
        "mimeType" : "text/java"
      },
      "com/google/common/hash/AbstractHashFunction.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/crypto/BIP38PrivateKey.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/crypto/TrustStoreLoader$DefaultTrustStoreLoader.java" : {
        "mimeType" : "text/java"
      },
      "com/google/common/hash/AbstractCompositeHashFunction.java" : {
        "mimeType" : "text/java"
      },
      "org/bitcoinj/protocols/payments/slp/SlpPaymentProtocol.java" : {
        "mimeType" : "text/java"
      },
      "org/bouncycastle/jce/provider/X509CertificateObject.java" : {
        "mimeType" : "text/java"
      }
    },
    "resources" : {
      "rules" : {
        "ForbiddenMethodError" : {
          "id" : "ForbiddenMethodError",
          "fullDescription" : {
            "text" : "A method that is forbidden (CrySL block FORBIDDEN) to be called under some circumstances was found."
          }
        },
        "ConstraintError-1" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-2" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-3" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-4" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-5" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-6" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-11" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-7" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-10" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-8" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-13" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError-9" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-12" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "IncompleteOperationError" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "RequiredPredicateError-15" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-14" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-4" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "IncompleteOperationError-14" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "TypestateError-5" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "IncompleteOperationError-13" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "TypestateError-6" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "IncompleteOperationError-16" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "TypestateError-7" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "IncompleteOperationError-15" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "TypestateError-8" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "IncompleteOperationError-17" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "TypestateError-9" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-1" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-2" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-3" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "IncompleteOperationError-7" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-6" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "HardCodedError" : {
          "id" : "HardCodedError",
          "fullDescription" : {
            "text" : null
          }
        },
        "IncompleteOperationError-9" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-8" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "RequiredPredicateError" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "IncompleteOperationError-1" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-3" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-10" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-2" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-5" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-12" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-4" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "IncompleteOperationError-11" : {
          "id" : "IncompleteOperationError",
          "fullDescription" : {
            "text" : "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
          }
        },
        "NeverTypeOfError" : {
          "id" : "NeverTypeOfError",
          "fullDescription" : {
            "text" : "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
          }
        },
        "RequiredPredicateError-9" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-8" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-7" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-6" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-5" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-4" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-3" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-2" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-1" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        }
      }
    },
    "results" : [ {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 119
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readBinary"
      } ],
      "ruleId" : "IncompleteOperationError",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 121
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readBinary"
      } ],
      "ruleId" : "ForbiddenMethodError",
      "message" : {
        "text" : "Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream.",
        "richText" : "ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 132
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readBinary"
      } ],
      "ruleId" : "IncompleteOperationError-1",
      "message" : {
        "text" : "Operation on object of type java.security.DigestInputStream object not completed. Expected call to read.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.DigestInputStream."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 121
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readBinary"
      } ],
      "ruleId" : "IncompleteOperationError-2",
      "message" : {
        "text" : "Operation on object of type java.security.DigestInputStream object not completed. Expected call to read.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.DigestInputStream."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 144
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readBinary"
      } ],
      "ruleId" : "TypestateError",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 182
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readTextual"
      } ],
      "ruleId" : "IncompleteOperationError-3",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 157
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readTextual"
      } ],
      "ruleId" : "IncompleteOperationError-4",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 182
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readTextual"
      } ],
      "ruleId" : "IncompleteOperationError-5",
      "message" : {
        "text" : "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
        "richText" : "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/CheckpointManager.java"
          },
          "region" : {
            "startLine" : 157
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::CheckpointManager::readTextual"
      } ],
      "ruleId" : "IncompleteOperationError-6",
      "message" : {
        "text" : "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
        "richText" : "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/MnemonicCode.java"
          },
          "region" : {
            "startLine" : 106
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::MnemonicCode::<init>"
      } ],
      "ruleId" : "TypestateError-1",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/MnemonicCode.java"
          },
          "region" : {
            "startLine" : 96
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::MnemonicCode::<init>"
      } ],
      "ruleId" : "IncompleteOperationError-7",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte).",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/MnemonicCode.java"
          },
          "region" : {
            "startLine" : 93
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::MnemonicCode::<init>"
      } ],
      "ruleId" : "IncompleteOperationError-8",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "dummyMainClass.java"
          },
          "region" : {
            "startLine" : -1
          }
        },
        "fullyQualifiedLogicalName" : "dummyMainClass::dummyMainMethod"
      } ],
      "ruleId" : "IncompleteOperationError-9",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/bip47/BIP47PaymentCode.java"
          },
          "region" : {
            "startLine" : 106
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::bip47::BIP47PaymentCode::getMask"
      } ],
      "ruleId" : "TypestateError-2",
      "message" : {
        "text" : "Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int).",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/core/bip47/BIP47PaymentCode.java"
          },
          "region" : {
            "startLine" : 104
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::core::bip47::BIP47PaymentCode::getMask"
      } ],
      "ruleId" : "RequiredPredicateError",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bouncycastle/x509/AttributeCertificateHolder.java"
          },
          "region" : {
            "startLine" : -1
          }
        },
        "fullyQualifiedLogicalName" : "org::bouncycastle::x509::AttributeCertificateHolder::match"
      } ],
      "ruleId" : "TypestateError-3",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP47SecretPoint.java"
          },
          "region" : {
            "startLine" : 42
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP47SecretPoint::<init>"
      } ],
      "ruleId" : "ConstraintError",
      "message" : {
        "text" : "First parameter (with value \"ECDH\") should be any of {RSA, DiffieHellman, DH, DSA, EC}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.KeyFactory."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP47SecretPoint.java"
          },
          "region" : {
            "startLine" : 75
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP47SecretPoint::ECDHSecret"
      } ],
      "ruleId" : "ConstraintError-1",
      "message" : {
        "text" : "First parameter (with value \"AES\") should be any of {DH, DiffieHellman, ECDH}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.KeyAgreement."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP47SecretPoint.java"
          },
          "region" : {
            "startLine" : 85
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP47SecretPoint::loadPublicKey"
      } ],
      "ruleId" : "RequiredPredicateError-1",
      "message" : {
        "text" : "First parameter was not properly generated as specced Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.KeyFactory."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "app/crescentcash/src/hash/HashHelper$Companion.java"
          },
          "region" : {
            "startLine" : 67
          }
        },
        "fullyQualifiedLogicalName" : "app::crescentcash::src::hash::HashHelper$Companion::SHA256_Hex"
      } ],
      "ruleId" : "IncompleteOperationError-10",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/script/Script.java"
          },
          "region" : {
            "startLine" : 1204
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::script::Script::executeScript"
      } ],
      "ruleId" : "ConstraintError-2",
      "message" : {
        "text" : "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/PBKDF2SHA512.java"
          },
          "region" : {
            "startLine" : 76
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::PBKDF2SHA512::F"
      } ],
      "ruleId" : "RequiredPredicateError-2",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/PBKDF2SHA512.java"
          },
          "region" : {
            "startLine" : 78
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::PBKDF2SHA512::F"
      } ],
      "ruleId" : "IncompleteOperationError-11",
      "message" : {
        "text" : "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
        "richText" : "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/PBKDF2SHA512.java"
          },
          "region" : {
            "startLine" : 93
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::PBKDF2SHA512::F"
      } ],
      "ruleId" : "TypestateError-4",
      "message" : {
        "text" : "Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int).",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/PBKDF2SHA512.java"
          },
          "region" : {
            "startLine" : 89
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::PBKDF2SHA512::F"
      } ],
      "ruleId" : "TypestateError-5",
      "message" : {
        "text" : "Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int).",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/PBKDF2SHA512.java"
          },
          "region" : {
            "startLine" : 91
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::PBKDF2SHA512::F"
      } ],
      "ruleId" : "IncompleteOperationError-12",
      "message" : {
        "text" : "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
        "richText" : "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/PBKDF2SHA512.java"
          },
          "region" : {
            "startLine" : 94
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::PBKDF2SHA512::F"
      } ],
      "ruleId" : "IncompleteOperationError-13",
      "message" : {
        "text" : "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
        "richText" : "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/protocols/payments/slp/SlpPaymentProtocol.java"
          },
          "region" : {
            "startLine" : 207
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::protocols::payments::slp::SlpPaymentProtocol::verifyPaymentRequestPki"
      } ],
      "ruleId" : "RequiredPredicateError-3",
      "message" : {
        "text" : "First parameter was not properly generated as generated Pubkey.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.Signature."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/protocols/payments/slp/SlpPaymentProtocol.java"
          },
          "region" : {
            "startLine" : 203
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::protocols::payments::slp::SlpPaymentProtocol::verifyPaymentRequestPki"
      } ],
      "ruleId" : "ConstraintError-3",
      "message" : {
        "text" : "First parameter (with value \"SHA1withRSA\") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.Signature."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/protocols/payments/slp/SlpPaymentProtocol.java"
          },
          "region" : {
            "startLine" : 194
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::protocols::payments::slp::SlpPaymentProtocol::verifyPaymentRequestPki"
      } ],
      "ruleId" : "RequiredPredicateError-4",
      "message" : {
        "text" : "First parameter was not properly generated as generated Key Store.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.cert.PKIXParameters."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/protocols/payments/PaymentProtocol.java"
          },
          "region" : {
            "startLine" : 207
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::protocols::payments::PaymentProtocol::verifyPaymentRequestPki"
      } ],
      "ruleId" : "RequiredPredicateError-5",
      "message" : {
        "text" : "First parameter was not properly generated as generated Pubkey.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.Signature."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/protocols/payments/PaymentProtocol.java"
          },
          "region" : {
            "startLine" : 194
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::protocols::payments::PaymentProtocol::verifyPaymentRequestPki"
      } ],
      "ruleId" : "RequiredPredicateError-6",
      "message" : {
        "text" : "First parameter was not properly generated as generated Key Store.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.cert.PKIXParameters."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/protocols/payments/PaymentProtocol.java"
          },
          "region" : {
            "startLine" : 203
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::protocols::payments::PaymentProtocol::verifyPaymentRequestPki"
      } ],
      "ruleId" : "ConstraintError-4",
      "message" : {
        "text" : "First parameter (with value \"SHA1withRSA\") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.Signature."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.java"
          },
          "region" : {
            "startLine" : 161
          }
        },
        "fullyQualifiedLogicalName" : "com::google::common::hash::MessageDigestHashFunction$MessageDigestHasher::hash"
      } ],
      "ruleId" : "TypestateError-6",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.java"
          },
          "region" : {
            "startLine" : 160
          }
        },
        "fullyQualifiedLogicalName" : "com::google::common::hash::MessageDigestHashFunction$MessageDigestHasher::hash"
      } ],
      "ruleId" : "TypestateError-7",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/google/common/hash/AbstractHashFunction.java"
          },
          "region" : {
            "startLine" : 33
          }
        },
        "fullyQualifiedLogicalName" : "com::google::common::hash::AbstractHashFunction::hashObject"
      } ],
      "ruleId" : "IncompleteOperationError-14",
      "message" : {
        "text" : "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
        "richText" : "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/google/common/hash/AbstractHashFunction.java"
          },
          "region" : {
            "startLine" : 33
          }
        },
        "fullyQualifiedLogicalName" : "com::google::common::hash::AbstractHashFunction::hashObject"
      } ],
      "ruleId" : "IncompleteOperationError-15",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/google/common/hash/AbstractCompositeHashFunction.java"
          },
          "region" : {
            "startLine" : 58
          }
        },
        "fullyQualifiedLogicalName" : "com::google::common::hash::AbstractCompositeHashFunction::newHasher"
      } ],
      "ruleId" : "IncompleteOperationError-16",
      "message" : {
        "text" : "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
        "richText" : "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/google/common/hash/AbstractCompositeHashFunction.java"
          },
          "region" : {
            "startLine" : 58
          }
        },
        "fullyQualifiedLogicalName" : "com::google::common::hash::AbstractCompositeHashFunction::newHasher"
      } ],
      "ruleId" : "IncompleteOperationError-17",
      "message" : {
        "text" : "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
        "richText" : "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/X509Utils.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::X509Utils::loadKeyStore"
      } ],
      "ruleId" : "NeverTypeOfError",
      "message" : {
        "text" : "Second parameter should never be of type java.lang.String..",
        "richText" : "NeverTypeOfError violating CrySL rule for java.security.KeyStore."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/X509Utils.java"
          },
          "region" : {
            "startLine" : 90
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::X509Utils::loadKeyStore"
      } ],
      "ruleId" : "HardCodedError",
      "message" : {
        "text" : "Second parameter should never be hardcoded..",
        "richText" : "HardCodedError violating CrySL rule for java.security.KeyStore."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/TrustStoreLoader$DefaultTrustStoreLoader.java"
          },
          "region" : {
            "startLine" : 84
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::TrustStoreLoader$DefaultTrustStoreLoader::loadIcsKeyStore"
      } ],
      "ruleId" : "ConstraintError-5",
      "message" : {
        "text" : "First parameter (with value \"AndroidCAStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.KeyStore."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "okio/ByteString.java"
          },
          "region" : {
            "startLine" : 156
          }
        },
        "fullyQualifiedLogicalName" : "okio::ByteString::digest"
      } ],
      "ruleId" : "ConstraintError-6",
      "message" : {
        "text" : "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "okio/ByteString.java"
          },
          "region" : {
            "startLine" : 156
          }
        },
        "fullyQualifiedLogicalName" : "okio::ByteString::digest"
      } ],
      "ruleId" : "ConstraintError-7",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 168
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptEC"
      } ],
      "ruleId" : "RequiredPredicateError-7",
      "message" : {
        "text" : "Second parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 171
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptEC"
      } ],
      "ruleId" : "TypestateError-8",
      "message" : {
        "text" : "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 166
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptEC"
      } ],
      "ruleId" : "RequiredPredicateError-8",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 167
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptEC"
      } ],
      "ruleId" : "ConstraintError-8",
      "message" : {
        "text" : "First parameter (with value \"AES/ECB/NoPadding\") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 135
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptNoEC"
      } ],
      "ruleId" : "ConstraintError-9",
      "message" : {
        "text" : "First parameter (with value \"AES/ECB/NoPadding\") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 132
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptNoEC"
      } ],
      "ruleId" : "RequiredPredicateError-9",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 138
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptNoEC"
      } ],
      "ruleId" : "TypestateError-9",
      "message" : {
        "text" : "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bitcoinj/crypto/BIP38PrivateKey.java"
          },
          "region" : {
            "startLine" : 137
          }
        },
        "fullyQualifiedLogicalName" : "org::bitcoinj::crypto::BIP38PrivateKey::decryptNoEC"
      } ],
      "ruleId" : "RequiredPredicateError-10",
      "message" : {
        "text" : "Second parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bouncycastle/jce/provider/X509CertificateObject.java"
          },
          "region" : {
            "startLine" : -1
          }
        },
        "fullyQualifiedLogicalName" : "org::bouncycastle::jce::provider::X509CertificateObject::checkSignature"
      } ],
      "ruleId" : "RequiredPredicateError-11",
      "message" : {
        "text" : "First parameter was not properly generated as generated Pubkey.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.Signature."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateImpl.java"
          },
          "region" : {
            "startLine" : -1
          }
        },
        "fullyQualifiedLogicalName" : "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::checkSignature"
      } ],
      "ruleId" : "RequiredPredicateError-12",
      "message" : {
        "text" : "First parameter was not properly generated as generated Pubkey.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.Signature."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bouncycastle/jce/provider/X509SignatureUtil.java"
          },
          "region" : {
            "startLine" : -1
          }
        },
        "fullyQualifiedLogicalName" : "org::bouncycastle::jce::provider::X509SignatureUtil::setSignatureParameters"
      } ],
      "ruleId" : "RequiredPredicateError-13",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Alg.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/google/common/hash/MacHashFunction.java"
          },
          "region" : {
            "startLine" : 70
          }
        },
        "fullyQualifiedLogicalName" : "com::google::common::hash::MacHashFunction::getMac"
      } ],
      "ruleId" : "RequiredPredicateError-14",
      "message" : {
        "text" : "First parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Mac."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.java"
          },
          "region" : {
            "startLine" : -1
          }
        },
        "fullyQualifiedLogicalName" : "org::bouncycastle::jcajce::provider::asymmetric::x509::X509SignatureUtil::setSignatureParameters"
      } ],
      "ruleId" : "RequiredPredicateError-15",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Alg.",
        "richText" : "RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters."
      }
    } ],
    "tool" : {
      "name" : "CryptoAnalysis",
      "semanticVersion" : null,
      "language" : "en-US",
      "version" : null
    }
  } ]
}