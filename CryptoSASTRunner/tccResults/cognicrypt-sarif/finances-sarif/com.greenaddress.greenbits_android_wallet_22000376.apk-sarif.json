{
  "sarifVersion" : "2.0.0",
  "runs" : [ {
    "files" : {
      "com/blockstream/green/settings/Migrator.java" : {
        "mimeType" : "text/java"
      },
      "com/blockstream/green/utils/AppKeystore.java" : {
        "mimeType" : "text/java"
      },
      "androidx/biometric/CryptoObjectUtils.java" : {
        "mimeType" : "text/java"
      }
    },
    "resources" : {
      "rules" : {
        "ConstraintError-2" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-3" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-4" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-5" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-3" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-2" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-1" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError-1" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-1" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        }
      }
    },
    "results" : [ {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 3
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::getEncryptionCipher"
      } ],
      "ruleId" : "RequiredPredicateError",
      "message" : {
        "text" : "Second parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 1
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::getEncryptionCipher"
      } ],
      "ruleId" : "ConstraintError",
      "message" : {
        "text" : "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 5
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::encryptData"
      } ],
      "ruleId" : "TypestateError",
      "message" : {
        "text" : "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 3
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::getDecryptionCipher"
      } ],
      "ruleId" : "RequiredPredicateError-1",
      "message" : {
        "text" : "First parameter was not properly generated as randomized.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 3
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::getDecryptionCipher"
      } ],
      "ruleId" : "RequiredPredicateError-2",
      "message" : {
        "text" : "Second parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 1
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::getDecryptionCipher"
      } ],
      "ruleId" : "ConstraintError-1",
      "message" : {
        "text" : "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 5
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::decryptData"
      } ],
      "ruleId" : "TypestateError-1",
      "message" : {
        "text" : "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/utils/AppKeystore.java"
          },
          "region" : {
            "startLine" : 2
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::utils::AppKeystore::<init>"
      } ],
      "ruleId" : "ConstraintError-2",
      "message" : {
        "text" : "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.KeyStore."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "com/blockstream/green/settings/Migrator.java"
          },
          "region" : {
            "startLine" : 6
          }
        },
        "fullyQualifiedLogicalName" : "com::blockstream::green::settings::Migrator::<init>"
      } ],
      "ruleId" : "ConstraintError-3",
      "message" : {
        "text" : "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.KeyStore."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "androidx/biometric/CryptoObjectUtils.java"
          },
          "region" : {
            "startLine" : 1
          }
        },
        "fullyQualifiedLogicalName" : "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
      } ],
      "ruleId" : "ConstraintError-4",
      "message" : {
        "text" : "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.KeyStore."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "androidx/biometric/CryptoObjectUtils.java"
          },
          "region" : {
            "startLine" : 12
          }
        },
        "fullyQualifiedLogicalName" : "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
      } ],
      "ruleId" : "RequiredPredicateError-3",
      "message" : {
        "text" : "Second parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "androidx/biometric/CryptoObjectUtils.java"
          },
          "region" : {
            "startLine" : 11
          }
        },
        "fullyQualifiedLogicalName" : "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
      } ],
      "ruleId" : "ConstraintError-5",
      "message" : {
        "text" : "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    } ],
    "tool" : {
      "name" : "CryptoAnalysis",
      "semanticVersion" : null,
      "language" : "en-US",
      "version" : null
    }
  } ]
}