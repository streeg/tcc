ErrorType;Class;Method;ViolatedRule;Object;Statement;ExternalLibrary;PossibleExternal
ForbiddenMethodError;io.grpc.okhttp.internal.Platform;io.grpc.okhttp.internal.Platform findPlatform();violating CrySL rule for javax.net.ssl.SSLContext ;Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.;$r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>();false;false
ConstraintError;org.tron.common.crypto.SymmEncoder;byte[] AesEcbDecode(byte[],javax.crypto.SecretKey);violating CrySL rule for javax.crypto.Cipher (on Object #2c1807c294dc11098dba231efb38a73e12865a15c2233c5c3fd3b83c87cd4671);First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB};$r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer163);false;false
RequiredPredicateError;org.tron.common.crypto.SymmEncoder;byte[] AesEcbDecode(byte[],javax.crypto.SecretKey);violating CrySL rule for javax.crypto.Cipher ;Second parameter was not properly generated as generated Key;virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer161, $r0);false;false
TypestateError;org.tron.common.crypto.SymmEncoder;byte[] AesEcbDecode(byte[],javax.crypto.SecretKey);violating CrySL rule for javax.crypto.Cipher (on Object #2c1807c294dc11098dba231efb38a73e12865a15c2233c5c3fd3b83c87cd4671);Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD;$r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);false;false
RequiredPredicateError;org.tron.common.crypto.SymmEncoder;byte[] AesEcbEncode(byte[],javax.crypto.SecretKey);violating CrySL rule for javax.crypto.Cipher ;Second parameter was not properly generated as generated Key;virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer47581, $r0);false;false
TypestateError;org.tron.common.crypto.SymmEncoder;byte[] AesEcbEncode(byte[],javax.crypto.SecretKey);violating CrySL rule for javax.crypto.Cipher (on Object #8290d98f370f702f62ad2e5ad8a20536e01144cb551f54c49f87e054fa56b3d4);Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD;$r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);false;false
ConstraintError;org.tron.common.crypto.SymmEncoder;byte[] AesEcbEncode(byte[],javax.crypto.SecretKey);violating CrySL rule for javax.crypto.Cipher (on Object #8290d98f370f702f62ad2e5ad8a20536e01144cb551f54c49f87e054fa56b3d4);First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB};$r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer47580);false;false
RequiredPredicateError;org.tron.common.crypto.SymmEncoder;javax.crypto.SecretKey restoreSecretKey(byte[],java.lang.String);violating CrySL rule for javax.crypto.spec.SecretKeySpec ;First parameter was not properly generated as prepared Key Material;specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1);false;false
RequiredPredicateError;com.eletac.tronwallet.bip39.BIP39;java.lang.String encode(byte[],java.lang.String);violating CrySL rule for javax.crypto.spec.SecretKeySpec ;First parameter was not properly generated as prepared Key Material;specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer383);false;false
ConstraintError;com.eletac.tronwallet.bip39.BIP39;java.lang.String encode(byte[],java.lang.String);violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #39e6887582b0984491c59259fb084de8fb366e827a38387999393f7ba611948f);Second parameter (with value "Blowfish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512};specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer383);false;false
TypestateError;com.eletac.tronwallet.bip39.BIP39;java.lang.String encode(byte[],java.lang.String);violating CrySL rule for javax.crypto.Cipher (on Object #974f433222c729b7ee4d1d1aeae463c9f34465ea2818743e4e5f7136e9a2741d);Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD;$r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);false;false
ConstraintError;com.eletac.tronwallet.bip39.BIP39;java.lang.String encode(byte[],java.lang.String);violating CrySL rule for javax.crypto.Cipher (on Object #974f433222c729b7ee4d1d1aeae463c9f34465ea2818743e4e5f7136e9a2741d);First parameter (with value "BlowFish/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256};$r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer389);false;false
RequiredPredicateError;com.eletac.tronwallet.bip39.BIP39;java.lang.String encode(byte[],java.lang.String);violating CrySL rule for javax.crypto.Cipher ;Second parameter was not properly generated as generated Key;virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer388, $r3);false;false
TypestateError;com.eletac.tronwallet.bip39.BIP39;byte[] decode(java.lang.String,java.lang.String);violating CrySL rule for javax.crypto.Cipher (on Object #d5b10a4011eceec404d200db120da2cee040eeba7e8e7fd3951705201c5fbbe6);Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD;$r6 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);false;false
ConstraintError;com.eletac.tronwallet.bip39.BIP39;byte[] decode(java.lang.String,java.lang.String);violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #805034f5a82ab9233b5474d189465190cfd62ab1898ef8b3991b67c0d4f659b8);Second parameter (with value "Blowfish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512};specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer48546);false;false
RequiredPredicateError;com.eletac.tronwallet.bip39.BIP39;byte[] decode(java.lang.String,java.lang.String);violating CrySL rule for javax.crypto.Cipher ;Second parameter was not properly generated as generated Key;virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer48547, $r8);false;false
RequiredPredicateError;com.eletac.tronwallet.bip39.BIP39;byte[] decode(java.lang.String,java.lang.String);violating CrySL rule for javax.crypto.spec.SecretKeySpec ;First parameter was not properly generated as prepared Key Material;specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer48546);false;false
ConstraintError;com.eletac.tronwallet.bip39.BIP39;byte[] decode(java.lang.String,java.lang.String);violating CrySL rule for javax.crypto.Cipher (on Object #d5b10a4011eceec404d200db120da2cee040eeba7e8e7fd3951705201c5fbbe6);First parameter (with value "BlowFish/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256};$r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer48552);false;false
RequiredPredicateError;io.grpc.okhttp.OkHttpChannelBuilder;javax.net.ssl.SSLSocketFactory createSocketFactory();violating CrySL rule for javax.net.ssl.SSLContext ;Second parameter was not properly generated as generated Trust Managers;virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27812, $r12, $r13);false;false
ConstraintError;io.grpc.okhttp.OkHttpChannelBuilder;javax.net.ssl.SSLSocketFactory createSocketFactory();violating CrySL rule for javax.net.ssl.SSLContext (on Object #e5c2a528856b2501036fb5e01bdb8d882435fbd9eddf94da631a2858bfe65f7f);First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3};$r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer27814, $r8);false;false
RequiredPredicateError;io.grpc.okhttp.OkHttpChannelBuilder;javax.net.ssl.SSLSocketFactory createSocketFactory();violating CrySL rule for javax.net.ssl.TrustManagerFactory ;First parameter was not properly generated as generated Key Store;virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer27811);false;false
ConstraintError;io.grpc.okhttp.OkHttpChannelBuilder;javax.net.ssl.SSLSocketFactory createSocketFactory();violating CrySL rule for javax.net.ssl.SSLContext (on Object #446050d8408ca564f9c0b3d32b76b7b84669050c6ef9c1324e7bc1c775b89719);First parameter (with value "Default") should be any of {TLSv1.2, TLSv1.3};$r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer27815, $r8);false;false
IncompleteOperationError;io.grpc.okhttp.OkHttpChannelBuilder;javax.net.ssl.SSLSocketFactory createSocketFactory();violating CrySL rule for javax.net.ssl.SSLContext (on Object #446050d8408ca564f9c0b3d32b76b7b84669050c6ef9c1324e7bc1c775b89719);Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init;$r6 = virtualinvoke $r10.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();false;false
RequiredPredicateError;io.grpc.okhttp.OkHttpChannelBuilder;javax.net.ssl.SSLSocketFactory createSocketFactory();violating CrySL rule for javax.net.ssl.SSLContext ;First parameter was not properly generated as generated Key Managers;virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27812, $r12, $r13);false;false
TypestateError;com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher;com.google.common.hash.HashCode hash();violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838);Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]);$r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();false;false
IncompleteOperationError;com.google.common.hash.AbstractCompositeHashFunction;com.google.common.hash.Hasher newHasher();violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838);Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update;specialinvoke $r5.<com.google.common.hash.AbstractCompositeHashFunction$1: void <init>(com.google.common.hash.AbstractCompositeHashFunction,com.google.common.hash.Hasher[])>(r0, $r3);false;false
IncompleteOperationError;com.google.common.hash.AbstractStreamingHashFunction;com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel);violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838);Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update;$r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>();false;false
IncompleteOperationError;com.squareup.okhttp.internal.Util;java.lang.String md5Hex(java.lang.String);violating CrySL rule for java.security.MessageDigest (on Object #a723ac1d34d3d0d91d92b76b808842f93d89ea1560d3bddec2c6bf0243aba4db);Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[]);$r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);false;false
ConstraintError;com.squareup.okhttp.internal.Util;java.lang.String md5Hex(java.lang.String);violating CrySL rule for java.security.MessageDigest (on Object #a723ac1d34d3d0d91d92b76b808842f93d89ea1560d3bddec2c6bf0243aba4db);First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512};$r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45312);false;false
IncompleteOperationError;com.squareup.okhttp.internal.Util;okio.ByteString sha1(okio.ByteString);violating CrySL rule for java.security.MessageDigest (on Object #c6cf845909bd8042a01581ffe6b07a9beab3a4662ad64e32717fe09582a54596);Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[]);$r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);false;false
ConstraintError;com.squareup.okhttp.internal.Util;okio.ByteString sha1(okio.ByteString);violating CrySL rule for java.security.MessageDigest (on Object #c6cf845909bd8042a01581ffe6b07a9beab3a4662ad64e32717fe09582a54596);First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512};$r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer49292);false;false
IncompleteOperationError;com.facebook.stetho.websocket.WebSocketHandler;java.lang.String generateServerKey(java.lang.String);violating CrySL rule for java.security.MessageDigest (on Object #47c7dbea7bee66e15ba6a3a022fce6c9d1b44915bffb2592f7447af0786b0d7f);Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest();$r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();false;false
ConstraintError;com.facebook.stetho.websocket.WebSocketHandler;java.lang.String generateServerKey(java.lang.String);violating CrySL rule for java.security.MessageDigest (on Object #47c7dbea7bee66e15ba6a3a022fce6c9d1b44915bffb2592f7447af0786b0d7f);First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512};$r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45450);false;false
TypestateError;com.facebook.stetho.websocket.WebSocketHandler;java.lang.String generateServerKey(java.lang.String);violating CrySL rule for java.security.MessageDigest (on Object #47c7dbea7bee66e15ba6a3a022fce6c9d1b44915bffb2592f7447af0786b0d7f);Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]);$r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();false;false
IncompleteOperationError;com.squareup.okhttp.Cache$Entry;java.util.List readCertificateList(okio.BufferedSource);violating CrySL rule for java.security.cert.CertificateFactory (on Object #fb1b67cdbd7bcd005e20f49ef835e01989485cd713a9b65b169081452e913a2a);Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL;$r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer47809);false;false
TypestateError;com.squareup.okhttp.Cache$Entry;java.util.List readCertificateList(okio.BufferedSource);violating CrySL rule for java.security.cert.CertificateFactory (on Object #fb1b67cdbd7bcd005e20f49ef835e01989485cd713a9b65b169081452e913a2a);Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL;$r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8);false;false
IncompleteOperationError;com.squareup.okhttp.Cache$Entry;java.util.List readCertificateList(okio.BufferedSource);violating CrySL rule for java.security.cert.CertificateFactory (on Object #fb1b67cdbd7bcd005e20f49ef835e01989485cd713a9b65b169081452e913a2a);Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream);$r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] decodeBlockOrRandom(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] decodeBlockOrRandom(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>();false;false
TypestateError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] decodeBlockOrRandom(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstance;virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] decodeBlockOrRandom(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i1 = interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();false;false
TypestateError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] encodeBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstance;virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] encodeBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] encodeBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] decodeBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] decodeBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.PKCS1Encoding;byte[] decodeBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i1 = interfaceinvoke $r2.<org.spongycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.tls.TlsRSAUtils;byte[] generateEncryptedPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,java.io.OutputStream);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r9 = virtualinvoke $r6.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer47945, $i0);false;false
IncompleteOperationError;org.spongycastle.crypto.tls.TlsRSAUtils;byte[] generateEncryptedPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,java.io.OutputStream);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r9 = virtualinvoke $r6.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer47945, $i0);false;false
IncompleteOperationError;org.spongycastle.crypto.tls.TlsRSAUtils;byte[] safeDecryptPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,byte[]);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r5 = virtualinvoke $r1.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r5, varReplacer48967, $i1);false;false
IncompleteOperationError;org.spongycastle.crypto.tls.TlsRSAUtils;byte[] safeDecryptPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,byte[]);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r5 = virtualinvoke $r1.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r5, varReplacer48967, $i1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.GenericSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.GenericSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.ISO9796d1Encoding;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.ISO9796d1Encoding;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.X931Signer;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.X931Signer;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.PSSSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.PSSSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.PSSSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.PSSSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.ISO9796d2PSSSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r8.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.ISO9796d2PSSSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r8.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.OAEPEncoding;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.OAEPEncoding;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.encodings.OAEPEncoding;byte[] decodeBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r3 = specialinvoke r0.<org.spongycastle.crypto.encodings.OAEPEncoding: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r1, varReplacer49569, $i0, $i1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.RSADigestSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.RSADigestSigner;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.ISO9796d2Signer;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3);false;false
IncompleteOperationError;org.spongycastle.crypto.signers.ISO9796d2Signer;void init(boolean,org.spongycastle.crypto.CipherParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3);false;false
ConstraintError;org.tron.common.crypto.jce.ECSignatureFactory;java.security.Signature getRawInstance(java.security.Provider);violating CrySL rule for java.security.Signature (on Object #dd827590e416a423c8f79f40dd195d433574204382dfc0c2098bbbf5656cf56);First parameter (with value "NONEwithECDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA};$r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>(varReplacer49133, $r1);false;false
IncompleteOperationError;org.spongycastle.crypto.engines.RSABlindedEngine;byte[] processBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r9 = staticinvoke <org.spongycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r9, $r10, $r11);false;false
IncompleteOperationError;org.spongycastle.crypto.engines.ElGamalEngine;byte[] processBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.ElGamalEngine: int getInputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.engines.NaccacheSternEngine;byte[] processBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.crypto.engines.NaccacheSternEngine;byte[] processBlock(byte[],int,int);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>();false;false
IncompleteOperationError;org.spongycastle.pqc.crypto.ntru.NTRUEngine;byte[] decrypt(byte[],org.spongycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r5 = virtualinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial decrypt(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial,org.spongycastle.pqc.math.ntru.polynomial.Polynomial,org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)>($r9, $r4, $r5);false;false
IncompleteOperationError;org.spongycastle.pqc.crypto.ntru.NTRUEngine;byte[] decrypt(byte[],org.spongycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r12 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial MGF(byte[],int,int,boolean)>($r1, $i1, $i6, $z0);false;false
IncompleteOperationError;org.spongycastle.pqc.crypto.ntru.NTRUEngine;byte[] decrypt(byte[],org.spongycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters);violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a);Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstance;$r4 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.Polynomial generateBlindingPoly(byte[],byte[])>($r7, $r1);false;false
ConstraintError;org.tron.common.crypto.jce.ECKeyPairGenerator;void <clinit>();violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #da0eb1d933f0dedb119e67b2a54d22d252ebab9b16c8cea096c4a5600d819428);First parameter (with value "secp256k1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35};specialinvoke $r0.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer50137);false;false
TypestateError;org.tron.common.crypto.ECKey;void <init>(java.security.Provider,java.security.SecureRandom);violating CrySL rule for java.security.KeyPairGenerator (on Object #70367fec90693de52dd28a7718409b66660ed239484c083e215bb101edc11944);Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize;$r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();false;false
IncompleteOperationError;org.tron.common.crypto.ECKey;void <init>(java.security.Provider,java.security.SecureRandom);violating CrySL rule for java.security.KeyPairGenerator (on Object #70367fec90693de52dd28a7718409b66660ed239484c083e215bb101edc11944);Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair();$r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();false;false
RequiredPredicateError;org.tron.common.crypto.ECKey;java.security.PrivateKey privateKeyFromBigInteger(java.math.BigInteger);violating CrySL rule for java.security.KeyFactory ;First parameter was not properly generated as specced Key;$r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0);false;false
RequiredPredicateError;org.tron.common.crypto.ECKey;org.tron.common.crypto.ECKey$ECDSASignature doSign(byte[]);violating CrySL rule for java.security.Signature ;First parameter was not properly generated as generated Privkey;virtualinvoke $r18.<java.security.Signature: void initSign(java.security.PrivateKey)>($r6);false;false
ConstraintError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;void <clinit>();violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #9a27e30acffa4521f1927d847cb14ff98a8f703243fa2cc83fed90d8413d3f07);First parameter (with value "P-224") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35};specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer50477);false;false
ConstraintError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;void <clinit>();violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #2b03c72996af2c5fea38e403c57073475d2d4e3d7ca6ef3c6accfe3ebee042f5);First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35};specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer50476);false;false
ConstraintError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;void <clinit>();violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #d4b8b90175b5777a2b7e27b66f3756af391430f69277753267698ad15f0b8d71);First parameter (with value "prime192v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35};specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer50483);false;false
ConstraintError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;void <clinit>();violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #3ce12b37e73a7f7ba99da447b8f19060cba3c02fd655fea2152e29813dd84b1c);First parameter (with value "prime239v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35};specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer50480);false;false
ConstraintError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;void <clinit>();violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #9e3a8cf7196f95aef6c23c9c5e43f48a42e66d63e21b32ce005faaed00c35450);First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35};specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer50486);false;false
ConstraintError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;void <clinit>();violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #ad7995042ec2f6abc68c43d53b4c17c841dc46938a6775eafa0472342e9853c9);First parameter (with value "prime256v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35};specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer50481);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r12);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r12);false;false
RequiredPredicateError;org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8);false;false
RequiredPredicateError;org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McEliece;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16);false;false
RequiredPredicateError;org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13);false;false
RequiredPredicateError;org.spongycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r12);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r12);false;false
RequiredPredicateError;org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8);false;false
RequiredPredicateError;org.spongycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi$McElieceCCA2;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;Second parameter was not properly generated as generated Privkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12);false;false
RequiredPredicateError;org.spongycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi;java.security.KeyPair generateKeyPair();violating CrySL rule for java.security.KeyPair ;First parameter was not properly generated as generated Pubkey;specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12);false;false
