{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "okhttp3/internal/platform/ConscryptPlatform.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/ec/KeyPairGeneratorSpi$EC.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/x509/AttributeCertificateHolder.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateImpl.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/Util.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/ecgost/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceKeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/ecgost12/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/dsa/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/rsa/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/xmss/XMSSMTKeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/qtesla/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "okhttp3/OkHttpClient.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/Platform.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/AndroidPlatform.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/gost/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "okio/SegmentedByteString.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jce/provider/X509CertificateObject.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/rainbow/RainbowKeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "okio/ByteString.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/lms/LMSKeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceCCA2KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/kethereum/crypto/impl/mac/HmacImpl.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/elgamal/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/dstu/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "im/status/keycard/applet/KeycardCommandSet.java": {
          "mimeType": "text/java"
        },
        "org/kethereum/crypto/impl/cipher/AESCipherImpl.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/dh/KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/xmss/XMSSKeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/sphincs/Sphincs256KeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jce/provider/X509SignatureUtil.java": {
          "mimeType": "text/java"
        },
        "im/status/keycard/applet/SecureChannelSession.java": {
          "mimeType": "text/java"
        },
        "org/kethereum/wallet/WalletKt.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/pqc/jcajce/provider/newhope/NHKeyPairGeneratorSpi.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "ConstraintError-19": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-17": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-18": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-11": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-48": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-12": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-47": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-10": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-49": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-15": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-16": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-13": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-1": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-14": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-2": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-51": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-3": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-50": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-4": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-53": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-5": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-52": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-6": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-11": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-7": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-10": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-54": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-8": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-13": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-9": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-12": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-15": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-14": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-17": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-16": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-19": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-18": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-20": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-22": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-21": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-24": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-23": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError-14": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-13": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-15": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-26": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-25": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-28": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-27": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError-1": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-29": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError-2": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-7": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "HardCodedError": {
            "id": "HardCodedError",
            "fullDescription": {
              "text": null
            }
          },
          "IncompleteOperationError-6": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-9": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-31": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError-8": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-30": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-33": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-32": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-35": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-34": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError-1": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-3": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-10": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-2": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-5": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-12": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-4": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-11": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "NeverTypeOfError": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "RequiredPredicateError-37": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-36": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-39": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-38": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-40": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-42": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-9": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-41": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-8": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-44": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-43": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-46": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-45": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.x509.AttributeCertificateHolder.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::x509::AttributeCertificateHolder::match"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.kethereum.wallet.WalletKt.java"
                },
                "region": {
                  "startLine": 95
                }
              },
              "fullyQualifiedLogicalName": "org::kethereum::wallet::WalletKt::performCipherOperation"
            }
          ],
          "ruleId": "IncompleteOperationError",
          "message": {
            "text": "Operation on object of type javax.crypto.Cipher object not completed. Expected call to init.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.KeycardCommandSet.java"
                },
                "region": {
                  "startLine": 197
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::KeycardCommandSet::pairingPasswordToSecret"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "First parameter was not properly generated as specced Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.KeycardCommandSet.java"
                },
                "region": {
                  "startLine": 196
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::KeycardCommandSet::pairingPasswordToSecret"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "Third parameter (with value 10)Variable iterationCountmust be  at least 10000.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.KeycardCommandSet.java"
                },
                "region": {
                  "startLine": 196
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::KeycardCommandSet::pairingPasswordToSecret"
            }
          ],
          "ruleId": "NeverTypeOfError",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.KeycardCommandSet.java"
                },
                "region": {
                  "startLine": 196
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::KeycardCommandSet::pairingPasswordToSecret"
            }
          ],
          "ruleId": "HardCodedError",
          "message": {
            "text": "First parameter should never be hardcoded..",
            "richText": "HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.KeycardCommandSet.java"
                },
                "region": {
                  "startLine": 197
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::KeycardCommandSet::pairingPasswordToSecret"
            }
          ],
          "ruleId": "IncompleteOperationError-1",
          "message": {
            "text": "Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.KeycardCommandSet.java"
                },
                "region": {
                  "startLine": 196
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::KeycardCommandSet::pairingPasswordToSecret"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "Second parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 305
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::getSSLContext"
            }
          ],
          "ruleId": "ConstraintError-1",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.AndroidPlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 461
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::AndroidPlatform::getSSLContext"
            }
          ],
          "ruleId": "ConstraintError-2",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 95
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::getSSLContext"
            }
          ],
          "ruleId": "ConstraintError-3",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 420
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::oneShotEncrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 419
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::oneShotEncrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 421
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::oneShotEncrypt"
            }
          ],
          "ruleId": "ConstraintError-4",
          "message": {
            "text": "First parameter (with value \"AES/CBC/ISO7816-4Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 74
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::generateSecret"
            }
          ],
          "ruleId": "IncompleteOperationError-2",
          "message": {
            "text": "Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair().",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 81
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::generateSecret"
            }
          ],
          "ruleId": "ConstraintError-5",
          "message": {
            "text": "First parameter (with value \"ECDSA\") should be any of {RSA, DiffieHellman, DH, DSA, EC}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 71
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::generateSecret"
            }
          ],
          "ruleId": "ConstraintError-6",
          "message": {
            "text": "First parameter (with value \"ECDH\") should be any of {RSA, EC, DSA, DiffieHellman, DH}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyPairGenerator."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 74
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::generateSecret"
            }
          ],
          "ruleId": "TypestateError-1",
          "message": {
            "text": "Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize.",
            "richText": "TypestateError violating CrySL rule for java.security.KeyPairGenerator."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 81
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::generateSecret"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "First parameter was not properly generated as specced Key.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 147
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::processOpenSecureChannelResponse"
            }
          ],
          "ruleId": "ConstraintError-7",
          "message": {
            "text": "First parameter (with value \"AES/CBC/ISO7816-4Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 138
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::processOpenSecureChannelResponse"
            }
          ],
          "ruleId": "ConstraintError-8",
          "message": {
            "text": "First parameter (with value \"SHA512\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 145
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::processOpenSecureChannelResponse"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 186
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::autoPair"
            }
          ],
          "ruleId": "ConstraintError-9",
          "message": {
            "text": "First parameter (with value \"SHA256\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 313
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::encryptAPDU"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "im.status.keycard.applet.SecureChannelSession.java"
                },
                "region": {
                  "startLine": 331
                }
              },
              "fullyQualifiedLogicalName": "im::status::keycard::applet::SecureChannelSession::decryptAPDU"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::<clinit>"
            }
          ],
          "ruleId": "ConstraintError-10",
          "message": {
            "text": "First parameter (with value \"prime192v1\") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}.",
            "richText": "ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::<clinit>"
            }
          ],
          "ruleId": "ConstraintError-11",
          "message": {
            "text": "First parameter (with value \"P-521\") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}.",
            "richText": "ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::<clinit>"
            }
          ],
          "ruleId": "ConstraintError-12",
          "message": {
            "text": "First parameter (with value \"P-224\") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}.",
            "richText": "ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::<clinit>"
            }
          ],
          "ruleId": "ConstraintError-13",
          "message": {
            "text": "First parameter (with value \"prime239v1\") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}.",
            "richText": "ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::<clinit>"
            }
          ],
          "ruleId": "ConstraintError-14",
          "message": {
            "text": "First parameter (with value \"P-384\") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}.",
            "richText": "ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::<clinit>"
            }
          ],
          "ruleId": "ConstraintError-15",
          "message": {
            "text": "First parameter (with value \"prime256v1\") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}.",
            "richText": "ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-8",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ec::KeyPairGeneratorSpi$EC::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-9",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 82
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-16",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 82
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-17",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 53
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-18",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 57
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "TypestateError-2",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 53
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-19",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-3",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-4",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-5",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-6",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-7",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-8",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-9",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-10",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-11",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-12",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-13",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-14",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::doVerify"
            }
          ],
          "ruleId": "IncompleteOperationError-15",
          "message": {
            "text": "Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::checkSignature"
            }
          ],
          "ruleId": "RequiredPredicateError-10",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.Util.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 671
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::Util::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-11",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::dstu::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-12",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::dstu::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-13",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.OkHttpClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 293
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::OkHttpClient::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-14",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.OkHttpClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 293
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::OkHttpClient::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-15",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.OkHttpClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 293
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::OkHttpClient::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-16",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jce.provider.X509CertificateObject.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jce::provider::X509CertificateObject::checkSignature"
            }
          ],
          "ruleId": "RequiredPredicateError-17",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ecgost::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-18",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ecgost::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-19",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ecgost12::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-20",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::ecgost12::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-21",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::mceliece::McElieceKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-22",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::mceliece::McElieceKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-23",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::rsa::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-24",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::rsa::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-25",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::newhope::NHKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-26",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::newhope::NHKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-27",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::lms::LMSKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-28",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::lms::LMSKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-29",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::rainbow::RainbowKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-30",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::rainbow::RainbowKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-31",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jce.provider.X509SignatureUtil.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jce::provider::X509SignatureUtil::setSignatureParameters"
            }
          ],
          "ruleId": "RequiredPredicateError-32",
          "message": {
            "text": "First parameter was not properly generated as prepared Alg.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::dh::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-33",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::dh::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-34",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::mceliece::McElieceCCA2KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-35",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::mceliece::McElieceCCA2KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-36",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::gost::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-37",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::gost::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-38",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::elgamal::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-39",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::elgamal::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-40",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::xmss::XMSSKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-41",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::xmss::XMSSKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-42",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.kethereum.crypto.impl.cipher.AESCipherImpl.java"
                },
                "region": {
                  "startLine": 14
                }
              },
              "fullyQualifiedLogicalName": "org::kethereum::crypto::impl::cipher::AESCipherImpl::init"
            }
          ],
          "ruleId": "RequiredPredicateError-43",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.kethereum.crypto.impl.cipher.AESCipherImpl.java"
                },
                "region": {
                  "startLine": 16
                }
              },
              "fullyQualifiedLogicalName": "org::kethereum::crypto::impl::cipher::AESCipherImpl::init"
            }
          ],
          "ruleId": "RequiredPredicateError-44",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::xmss::XMSSMTKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-45",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::xmss::XMSSMTKeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-46",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::sphincs::Sphincs256KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-47",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::sphincs::Sphincs256KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-48",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.qtesla.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::qtesla::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-49",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.pqc.jcajce.provider.qtesla.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::pqc::jcajce::provider::qtesla::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-50",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509SignatureUtil::setSignatureParameters"
            }
          ],
          "ruleId": "RequiredPredicateError-51",
          "message": {
            "text": "First parameter was not properly generated as prepared Alg.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.kethereum.crypto.impl.mac.HmacImpl.java"
                },
                "region": {
                  "startLine": 15
                }
              },
              "fullyQualifiedLogicalName": "org::kethereum::crypto::impl::mac::HmacImpl::init"
            }
          ],
          "ruleId": "RequiredPredicateError-52",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::dsa::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-53",
          "message": {
            "text": "Second parameter was not properly generated as generated Privkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::dsa::KeyPairGeneratorSpi::generateKeyPair"
            }
          ],
          "ruleId": "RequiredPredicateError-54",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPair."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}