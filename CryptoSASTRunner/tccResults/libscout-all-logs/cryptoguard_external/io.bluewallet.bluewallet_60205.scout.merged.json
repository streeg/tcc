{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "okhttp3/internal/platform/ConscryptPlatform.java": {
          "mimeType": "text/java"
        },
        "okio/ByteString.java": {
          "mimeType": "text/java"
        },
        "com/oblador/keychain/cipherStorage/CipherStorageBase$IV.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/Util.java": {
          "mimeType": "text/java"
        },
        "com/asterinet/react/tcpsocket/SSLCertificateHelper.java": {
          "mimeType": "text/java"
        },
        "com/oblador/keychain/cipherStorage/CipherStorageKeystoreAesCbc.java": {
          "mimeType": "text/java"
        },
        "com/facebook/soloader/SoLoader$1.java": {
          "mimeType": "text/java"
        },
        "com/facebook/crypto/streams/NativeMacLayeredInputStream.java": {
          "mimeType": "text/java"
        },
        "okhttp3/OkHttpClient.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/Platform.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/AndroidPlatform.java": {
          "mimeType": "text/java"
        },
        "com/oblador/keychain/cipherStorage/CipherStorageBase.java": {
          "mimeType": "text/java"
        },
        "com/facebook/common/util/SecureHashUtil.java": {
          "mimeType": "text/java"
        },
        "androidx/biometric/CryptoObjectUtils.java": {
          "mimeType": "text/java"
        },
        "com/oblador/keychain/cipherStorage/CipherStorageKeystoreRsaEcb.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "ConstraintError-11": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-10": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "TypestateError-1": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "ConstraintError-1": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-2": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-3": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-4": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-5": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-6": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-11": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-7": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-10": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-8": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-9": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-12": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-1": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-9": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-8": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.asterinet.react.tcpsocket.SSLCertificateHelper.java"
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "com::asterinet::react::tcpsocket::SSLCertificateHelper::createBlindSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.asterinet.react.tcpsocket.SSLCertificateHelper.java"
                },
                "region": {
                  "startLine": 32
                }
              },
              "fullyQualifiedLogicalName": "com::asterinet::react::tcpsocket::SSLCertificateHelper::createBlindSocketFactory"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.asterinet.react.tcpsocket.SSLCertificateHelper.java"
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "com::asterinet::react::tcpsocket::SSLCertificateHelper::createBlindSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.asterinet.react.tcpsocket.SSLCertificateHelper.java"
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "com::asterinet::react::tcpsocket::SSLCertificateHelper::createBlindSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.asterinet.react.tcpsocket.SSLCertificateHelper.java"
                },
                "region": {
                  "startLine": 59
                }
              },
              "fullyQualifiedLogicalName": "com::asterinet::react::tcpsocket::SSLCertificateHelper::createCustomTrustedSocketFactory"
            }
          ],
          "ruleId": "ConstraintError-1",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.asterinet.react.tcpsocket.SSLCertificateHelper.java"
                },
                "region": {
                  "startLine": 60
                }
              },
              "fullyQualifiedLogicalName": "com::asterinet::react::tcpsocket::SSLCertificateHelper::createCustomTrustedSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.oblador.keychain.cipherStorage.CipherStorageBase.java"
                },
                "region": {
                  "startLine": 305
                }
              },
              "fullyQualifiedLogicalName": "com::oblador::keychain::cipherStorage::CipherStorageBase::getKeyStoreAndLoad"
            }
          ],
          "ruleId": "ConstraintError-2",
          "message": {
            "text": "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.oblador.keychain.cipherStorage.CipherStorageBase.java"
                },
                "region": {
                  "startLine": 382
                }
              },
              "fullyQualifiedLogicalName": "com::oblador::keychain::cipherStorage::CipherStorageBase::decryptBytes"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.CipherInputStream."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.oblador.keychain.cipherStorage.CipherStorageBase.java"
                },
                "region": {
                  "startLine": 380
                }
              },
              "fullyQualifiedLogicalName": "com::oblador::keychain::cipherStorage::CipherStorageBase::decryptBytes"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "Second parameter was not properly generated as generated Cipher.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.CipherInputStream."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.facebook.common.util.SecureHashUtil.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 40
                }
              },
              "fullyQualifiedLogicalName": "com::facebook::common::util::SecureHashUtil::makeSHA1HashBase64"
            }
          ],
          "ruleId": "ConstraintError-3",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.facebook.soloader.SoLoader$1.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 416
                }
              },
              "fullyQualifiedLogicalName": "com::facebook::soloader::SoLoader$1::getLibHash"
            }
          ],
          "ruleId": "TypestateError-1",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.facebook.soloader.SoLoader$1.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 409
                }
              },
              "fullyQualifiedLogicalName": "com::facebook::soloader::SoLoader$1::getLibHash"
            }
          ],
          "ruleId": "ConstraintError-4",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.facebook.crypto.streams.NativeMacLayeredInputStream.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 105
                }
              },
              "fullyQualifiedLogicalName": "com::facebook::crypto::streams::NativeMacLayeredInputStream::ensureMacValid"
            }
          ],
          "ruleId": "IncompleteOperationError",
          "message": {
            "text": "Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 242
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-5",
          "message": {
            "text": "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 263
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 260
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-6",
          "message": {
            "text": "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 305
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::getSSLContext"
            }
          ],
          "ruleId": "ConstraintError-7",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.AndroidPlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 461
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::AndroidPlatform::getSSLContext"
            }
          ],
          "ruleId": "ConstraintError-8",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 95
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::getSSLContext"
            }
          ],
          "ruleId": "ConstraintError-9",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 156
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest"
            }
          ],
          "ruleId": "ConstraintError-10",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 156
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest"
            }
          ],
          "ruleId": "ConstraintError-11",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.oblador.keychain.cipherStorage.CipherStorageKeystoreAesCbc.java"
                },
                "region": {
                  "startLine": 203
                }
              },
              "fullyQualifiedLogicalName": "com::oblador::keychain::cipherStorage::CipherStorageKeystoreAesCbc::getKeyInfo"
            }
          ],
          "ruleId": "IncompleteOperationError-1",
          "message": {
            "text": "Operation on object of type javax.crypto.SecretKeyFactory object not completed. Expected call to translateKey, generateSecret.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.SecretKeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.oblador.keychain.cipherStorage.CipherStorageKeystoreRsaEcb.java"
                },
                "region": {
                  "startLine": 255
                }
              },
              "fullyQualifiedLogicalName": "com::oblador::keychain::cipherStorage::CipherStorageKeystoreRsaEcb::generateKey"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "First parameter was not properly generated as prepared R S A.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.oblador.keychain.cipherStorage.CipherStorageBase$IV.java"
                },
                "region": {
                  "startLine": 551
                }
              },
              "fullyQualifiedLogicalName": "com::oblador::keychain::cipherStorage::CipherStorageBase$IV::readIv"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.oblador.keychain.cipherStorage.CipherStorageBase$IV.java"
                },
                "region": {
                  "startLine": 563
                }
              },
              "fullyQualifiedLogicalName": "com::oblador::keychain::cipherStorage::CipherStorageBase$IV::readIv"
            }
          ],
          "ruleId": "RequiredPredicateError-8",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.Util.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 666
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::Util::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-9",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.OkHttpClient.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 293
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::OkHttpClient::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-10",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.OkHttpClient.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 293
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::OkHttpClient::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-11",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.OkHttpClient.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 293
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::OkHttpClient::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-12",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}