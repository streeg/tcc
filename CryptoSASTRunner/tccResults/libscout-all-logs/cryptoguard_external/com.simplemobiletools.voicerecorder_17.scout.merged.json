{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "com/andrognito/patternlockview/utils/PatternLockUtils.java": {
          "mimeType": "text/java"
        },
        "com/simplemobiletools/commons/extensions/InputStreamKt.java": {
          "mimeType": "text/java"
        },
        "com/simplemobiletools/commons/views/PinTab.java": {
          "mimeType": "text/java"
        },
        "androidx/biometric/CryptoObjectUtils.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "ConstraintError-2": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-3": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-4": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-1": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.simplemobiletools.commons.extensions.InputStreamKt.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "fullyQualifiedLogicalName": "com::simplemobiletools::commons::extensions::InputStreamKt::getDigest"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.simplemobiletools.commons.extensions.InputStreamKt.java"
                },
                "region": {
                  "startLine": 9
                }
              },
              "fullyQualifiedLogicalName": "com::simplemobiletools::commons::extensions::InputStreamKt::getDigest"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 244
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-1",
          "message": {
            "text": "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 265
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 262
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-2",
          "message": {
            "text": "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.simplemobiletools.commons.views.PinTab.java"
                },
                "region": {
                  "startLine": 104
                }
              },
              "fullyQualifiedLogicalName": "com::simplemobiletools::commons::views::PinTab::getHashedPin"
            }
          ],
          "ruleId": "ConstraintError-3",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.andrognito.patternlockview.utils.PatternLockUtils.java"
                },
                "region": {
                  "startLine": 90
                }
              },
              "fullyQualifiedLogicalName": "com::andrognito::patternlockview::utils::PatternLockUtils::patternToSha1"
            }
          ],
          "ruleId": "ConstraintError-4",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}