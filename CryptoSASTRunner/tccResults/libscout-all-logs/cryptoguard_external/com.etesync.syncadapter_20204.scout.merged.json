{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "okhttp3/internal/platform/ConscryptPlatform.java": {
          "mimeType": "text/java"
        },
        "okio/ByteString.java": {
          "mimeType": "text/java"
        },
        "com/etesync/syncadapter/HttpClient$Builder$build$trustManager$1.java": {
          "mimeType": "text/java"
        },
        "org/acra/http/BaseHttpRequest.java": {
          "mimeType": "text/java"
        },
        "org/conscrypt/OpenSSLX509Certificate.java": {
          "mimeType": "text/java"
        },
        "dummyMainClass.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/BouncyCastlePlatform.java": {
          "mimeType": "text/java"
        },
        "com/etesync/syncadapter/HttpClient$Builder.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/OpenJSSEPlatform.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/Platform.java": {
          "mimeType": "text/java"
        },
        "at/bitfire/cert4android/CustomCertService.java": {
          "mimeType": "text/java"
        },
        "at/bitfire/cert4android/CertUtils.java": {
          "mimeType": "text/java"
        },
        "okio/SegmentedByteString.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "ForbiddenMethodError": {
            "id": "ForbiddenMethodError",
            "fullDescription": {
              "text": "A method that is forbidden (CrySL block FORBIDDEN) to be called under some circumstances was found."
            }
          },
          "ConstraintError-10": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-1": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-2": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-3": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-4": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-5": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-6": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-11": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-7": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-10": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-8": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-13": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-9": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-12": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-1": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-15": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-14": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-16": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-9": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-8": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "at.bitfire.cert4android.CustomCertService.java"
                },
                "region": {
                  "startLine": 65
                }
              },
              "fullyQualifiedLogicalName": "at::bitfire::cert4android::CustomCertService::<clinit>"
            }
          ],
          "ruleId": "ForbiddenMethodError",
          "message": {
            "text": "Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>..",
            "richText": "ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "dummyMainClass.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "dummyMainClass::dummyMainMethod_at_bitfire_cert4android_CustomCertService"
            }
          ],
          "ruleId": "IncompleteOperationError",
          "message": {
            "text": "Operation on object of type java.security.KeyStore object not completed. Expected call to load.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "at.bitfire.cert4android.CertUtils.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "fullyQualifiedLogicalName": "at::bitfire::cert4android::CertUtils::getTrustManager"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "First parameter (with value \"X509\") should be any of {PKIX, SunX509}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.etesync.syncadapter.HttpClient$Builder.java"
                },
                "region": {
                  "startLine": 233
                }
              },
              "fullyQualifiedLogicalName": "com::etesync::syncadapter::HttpClient$Builder::build"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.etesync.syncadapter.HttpClient$Builder.java"
                },
                "region": {
                  "startLine": 232
                }
              },
              "fullyQualifiedLogicalName": "com::etesync::syncadapter::HttpClient$Builder::build"
            }
          ],
          "ruleId": "ConstraintError-1",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.etesync.syncadapter.HttpClient$Builder.java"
                },
                "region": {
                  "startLine": 233
                }
              },
              "fullyQualifiedLogicalName": "com::etesync::syncadapter::HttpClient$Builder::build"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.etesync.syncadapter.HttpClient$Builder.java"
                },
                "region": {
                  "startLine": 203
                }
              },
              "fullyQualifiedLogicalName": "com::etesync::syncadapter::HttpClient$Builder::build"
            }
          ],
          "ruleId": "ConstraintError-2",
          "message": {
            "text": "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.etesync.syncadapter.HttpClient$Builder.java"
                },
                "region": {
                  "startLine": 233
                }
              },
              "fullyQualifiedLogicalName": "com::etesync::syncadapter::HttpClient$Builder::build"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java"
                },
                "region": {
                  "startLine": 75
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-3",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java"
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java"
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java"
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java"
                },
                "region": {
                  "startLine": 80
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java"
                },
                "region": {
                  "startLine": 43
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-4",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java"
                },
                "region": {
                  "startLine": 85
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-8",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.BouncyCastlePlatform.java"
                },
                "region": {
                  "startLine": 38
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::BouncyCastlePlatform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-5",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.BouncyCastlePlatform.java"
                },
                "region": {
                  "startLine": 43
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::BouncyCastlePlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-9",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java"
                },
                "region": {
                  "startLine": 85
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-6",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java"
                },
                "region": {
                  "startLine": 85
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-7",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java"
                },
                "region": {
                  "startLine": 52
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-8",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java"
                },
                "region": {
                  "startLine": 56
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java"
                },
                "region": {
                  "startLine": 52
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-9",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.acra.http.BaseHttpRequest.java"
                },
                "region": {
                  "startLine": 132
                }
              },
              "fullyQualifiedLogicalName": "org::acra::http::BaseHttpRequest::configureHttps"
            }
          ],
          "ruleId": "IncompleteOperationError-1",
          "message": {
            "text": "Operation on object of type java.security.KeyStore object not completed. Expected call to load.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.acra.http.BaseHttpRequest.java"
                },
                "region": {
                  "startLine": 135
                }
              },
              "fullyQualifiedLogicalName": "org::acra::http::BaseHttpRequest::configureHttps"
            }
          ],
          "ruleId": "RequiredPredicateError-10",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.acra.http.BaseHttpRequest.java"
                },
                "region": {
                  "startLine": 135
                }
              },
              "fullyQualifiedLogicalName": "org::acra::http::BaseHttpRequest::configureHttps"
            }
          ],
          "ruleId": "RequiredPredicateError-11",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.acra.http.BaseHttpRequest.java"
                },
                "region": {
                  "startLine": 134
                }
              },
              "fullyQualifiedLogicalName": "org::acra::http::BaseHttpRequest::configureHttps"
            }
          ],
          "ruleId": "ConstraintError-10",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.conscrypt.OpenSSLX509Certificate.java"
                },
                "region": {
                  "startLine": 480
                }
              },
              "fullyQualifiedLogicalName": "org::conscrypt::OpenSSLX509Certificate::getPublicKey"
            }
          ],
          "ruleId": "RequiredPredicateError-12",
          "message": {
            "text": "First parameter was not properly generated as specced Key.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.KeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.conscrypt.OpenSSLX509Certificate.java"
                },
                "region": {
                  "startLine": 480
                }
              },
              "fullyQualifiedLogicalName": "org::conscrypt::OpenSSLX509Certificate::getPublicKey"
            }
          ],
          "ruleId": "RequiredPredicateError-13",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.conscrypt.OpenSSLX509Certificate.java"
                },
                "region": {
                  "startLine": 401
                }
              },
              "fullyQualifiedLogicalName": "org::conscrypt::OpenSSLX509Certificate::verifyInternal"
            }
          ],
          "ruleId": "RequiredPredicateError-14",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.OpenJSSEPlatform.java"
                },
                "region": {
                  "startLine": 45
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::OpenJSSEPlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-15",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.etesync.syncadapter.HttpClient$Builder$build$trustManager$1.java"
                },
                "region": {
                  "startLine": 185
                }
              },
              "fullyQualifiedLogicalName": "com::etesync::syncadapter::HttpClient$Builder$build$trustManager$1::invoke"
            }
          ],
          "ruleId": "RequiredPredicateError-16",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}