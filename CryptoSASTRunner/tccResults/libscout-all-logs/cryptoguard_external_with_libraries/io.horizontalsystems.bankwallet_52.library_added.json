{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "okhttp3/internal/platform/ConscryptPlatform.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/hdwalletkit/MnemonicKt.java": {
          "mimeType": "text/java"
        },
        "io/grpc/okhttp/internal/Platform.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/x509/AttributeCertificateHolder.java": {
          "mimeType": "text/java"
        },
        "io/grpc/okhttp/OkHttpChannelBuilder.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateImpl.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/core/security/KeyStoreManager.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/bankwallet/core/managers/APIClient.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/ethereumkit/crypto/CryptoUtils.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/MacHashFunction.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/Platform.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/operator/jcajce/JcaDigestCalculatorProviderBuilder$1.java": {
          "mimeType": "text/java"
        },
        "com/trustwallet/walletconnect/WCCipher.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/bitcoincore/utils/NetworkUtils.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/hdwalletkit/Mnemonic.java": {
          "mimeType": "text/java"
        },
        "okio/SegmentedByteString.java": {
          "mimeType": "text/java"
        },
        "com/squareup/okhttp/internal/Util.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jce/provider/X509CertificateObject.java": {
          "mimeType": "text/java"
        },
        "okio/ByteString.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/hdwalletkit/PBKDF2SHA512.java": {
          "mimeType": "text/java"
        },
        "com/squareup/okhttp/OkHttpClient.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/binancechainkit/helpers/Crypto.java": {
          "mimeType": "text/java"
        },
        "in3/Loader.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/BouncyCastlePlatform.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/cert/crmf/jcajce/JcePKMACValuesCalculator.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/OpenJSSEPlatform.java": {
          "mimeType": "text/java"
        },
        "org/bouncycastle/jce/provider/X509SignatureUtil.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/AbstractHashFunction.java": {
          "mimeType": "text/java"
        },
        "io/horizontalsystems/core/security/CipherWrapper.java": {
          "mimeType": "text/java"
        },
        "androidx/biometric/CryptoObjectUtils.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/AbstractCompositeHashFunction.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "ForbiddenMethodError": {
            "id": "ForbiddenMethodError",
            "fullDescription": {
              "text": "A method that is forbidden (CrySL block FORBIDDEN) to be called under some circumstances was found."
            }
          },
          "ConstraintError-11": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-12": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-10": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-15": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-16": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-13": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-1": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-14": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-2": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-3": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-4": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-5": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "TypestateError-10": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "ConstraintError-6": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-11": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError-11": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-10": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-7": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "TypestateError-12": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "ConstraintError-8": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-13": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError-13": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-12": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-9": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-15": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-14": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-17": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-16": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-19": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-18": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-20": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-22": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-21": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-24": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-23": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError-20": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "TypestateError-4": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-14": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "TypestateError-5": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-13": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "TypestateError-6": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-16": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "TypestateError-7": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-15": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "NeverTypeOfError-1": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "TypestateError-8": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-18": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "TypestateError-9": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-17": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-19": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-26": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-25": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-28": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-27": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError-1": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-29": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError-2": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "TypestateError-3": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "IncompleteOperationError-7": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-6": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-9": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-31": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError-8": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-30": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-33": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-32": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-35": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-34": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError-1": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-3": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-10": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "NeverTypeOfError-2": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "IncompleteOperationError-2": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-5": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-12": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-4": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-11": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "NeverTypeOfError": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "RequiredPredicateError-36": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-9": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-8": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.grpc.okhttp.internal.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 218
                }
              },
              "fullyQualifiedLogicalName": "io::grpc::okhttp::internal::Platform::findPlatform"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.grpc.okhttp.internal.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 209
                }
              },
              "fullyQualifiedLogicalName": "io::grpc::okhttp::internal::Platform::findPlatform"
            }
          ],
          "ruleId": "ForbiddenMethodError",
          "message": {
            "text": "Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>..",
            "richText": "ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.grpc.okhttp.internal.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 219
                }
              },
              "fullyQualifiedLogicalName": "io::grpc::okhttp::internal::Platform::findPlatform"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.grpc.okhttp.internal.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 219
                }
              },
              "fullyQualifiedLogicalName": "io::grpc::okhttp::internal::Platform::findPlatform"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.grpc.okhttp.internal.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 219
                }
              },
              "fullyQualifiedLogicalName": "io::grpc::okhttp::internal::Platform::findPlatform"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.core.security.KeyStoreManager.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::core::security::KeyStoreManager::<init>"
            }
          ],
          "ruleId": "ConstraintError-1",
          "message": {
            "text": "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "in3.Loader.java"
                },
                "region": {
                  "startLine": 76
                }
              },
              "fullyQualifiedLogicalName": "in3::Loader::md5"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "in3.Loader.java"
                },
                "region": {
                  "startLine": 70
                }
              },
              "fullyQualifiedLogicalName": "in3::Loader::md5"
            }
          ],
          "ruleId": "ConstraintError-2",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "in3.Loader.java"
                },
                "region": {
                  "startLine": 76
                }
              },
              "fullyQualifiedLogicalName": "in3::Loader::md5"
            }
          ],
          "ruleId": "IncompleteOperationError",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest().",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.ethereumkit.crypto.CryptoUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 113
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::ethereumkit::crypto::CryptoUtils::sha3"
            }
          ],
          "ruleId": "IncompleteOperationError-1",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest().",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.ethereumkit.crypto.CryptoUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 113
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::ethereumkit::crypto::CryptoUtils::sha3"
            }
          ],
          "ruleId": "TypestateError-1",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.x509.AttributeCertificateHolder.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::x509::AttributeCertificateHolder::match"
            }
          ],
          "ruleId": "TypestateError-2",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.x509.AttributeCertificateHolder.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::x509::AttributeCertificateHolder::match"
            }
          ],
          "ruleId": "IncompleteOperationError-2",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest().",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 75
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-3",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 80
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 44
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-4",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 104
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 48
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-8",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.BouncyCastlePlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 38
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::BouncyCastlePlatform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-5",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.BouncyCastlePlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 43
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::BouncyCastlePlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-9",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.core.security.CipherWrapper.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 15
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::core::security::CipherWrapper::<init>"
            }
          ],
          "ruleId": "ConstraintError-6",
          "message": {
            "text": "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.core.security.CipherWrapper.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 24
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::core::security::CipherWrapper::encrypt"
            }
          ],
          "ruleId": "TypestateError-3",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.core.security.CipherWrapper.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 40
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::core::security::CipherWrapper::decrypt"
            }
          ],
          "ruleId": "TypestateError-4",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.core.security.CipherWrapper.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 36
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::core::security::CipherWrapper::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-10",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 85
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-7",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 85
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest$okio"
            }
          ],
          "ruleId": "IncompleteOperationError-3",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[]).",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 52
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "ConstraintError-8",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 56
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "TypestateError-5",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 56
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "IncompleteOperationError-4",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest().",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.binancechainkit.helpers.Crypto.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 43
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::binancechainkit::helpers::Crypto::sign"
            }
          ],
          "ruleId": "IncompleteOperationError-5",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[]).",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::MessageDigestHashFunction$MessageDigestHasher::hash"
            }
          ],
          "ruleId": "TypestateError-6",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 161
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::MessageDigestHashFunction$MessageDigestHasher::hash"
            }
          ],
          "ruleId": "TypestateError-7",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractHashFunction::hashObject"
            }
          ],
          "ruleId": "IncompleteOperationError-6",
          "message": {
            "text": "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractHashFunction::hashObject"
            }
          ],
          "ruleId": "IncompleteOperationError-7",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractCompositeHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 58
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractCompositeHashFunction::newHasher"
            }
          ],
          "ruleId": "IncompleteOperationError-8",
          "message": {
            "text": "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractCompositeHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 58
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractCompositeHashFunction::newHasher"
            }
          ],
          "ruleId": "IncompleteOperationError-9",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::operator::jcajce::JcaDigestCalculatorProviderBuilder$1::get"
            }
          ],
          "ruleId": "IncompleteOperationError-10",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::operator::jcajce::JcaDigestCalculatorProviderBuilder$1::get"
            }
          ],
          "ruleId": "IncompleteOperationError-11",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::operator::jcajce::JcaDigestCalculatorProviderBuilder$1::get"
            }
          ],
          "ruleId": "IncompleteOperationError-12",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.PBKDF2SHA512.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 81
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::PBKDF2SHA512::F"
            }
          ],
          "ruleId": "NeverTypeOfError",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.PBKDF2SHA512.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 83
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::PBKDF2SHA512::F"
            }
          ],
          "ruleId": "IncompleteOperationError-13",
          "message": {
            "text": "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.PBKDF2SHA512.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 81
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::PBKDF2SHA512::F"
            }
          ],
          "ruleId": "RequiredPredicateError-11",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.PBKDF2SHA512.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 96
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::PBKDF2SHA512::F"
            }
          ],
          "ruleId": "IncompleteOperationError-14",
          "message": {
            "text": "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.PBKDF2SHA512.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 99
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::PBKDF2SHA512::F"
            }
          ],
          "ruleId": "IncompleteOperationError-15",
          "message": {
            "text": "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.PBKDF2SHA512.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 94
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::PBKDF2SHA512::F"
            }
          ],
          "ruleId": "TypestateError-8",
          "message": {
            "text": "Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int).",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.PBKDF2SHA512.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 98
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::PBKDF2SHA512::F"
            }
          ],
          "ruleId": "TypestateError-9",
          "message": {
            "text": "Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int).",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.OkHttpClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 632
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::OkHttpClient::getDefaultSSLSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-12",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.OkHttpClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 631
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::OkHttpClient::getDefaultSSLSocketFactory"
            }
          ],
          "ruleId": "ConstraintError-9",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.OkHttpClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 632
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::OkHttpClient::getDefaultSSLSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-13",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.OkHttpClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 632
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::OkHttpClient::getDefaultSSLSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-14",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 24
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::encrypt"
            }
          ],
          "ruleId": "TypestateError-10",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 22
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-15",
          "message": {
            "text": "Third parameter was not properly generated as prepared O A E P.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 22
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-16",
          "message": {
            "text": "Third parameter was not properly generated as prepared G C M.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 22
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-17",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 19
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::encrypt"
            }
          ],
          "ruleId": "NeverTypeOfError-1",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 19
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-18",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 62
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::computeHmac"
            }
          ],
          "ruleId": "NeverTypeOfError-2",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 62
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::computeHmac"
            }
          ],
          "ruleId": "RequiredPredicateError-19",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 63
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::computeHmac"
            }
          ],
          "ruleId": "TypestateError-11",
          "message": {
            "text": "Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int).",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 56
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::decrypt"
            }
          ],
          "ruleId": "TypestateError-12",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 54
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-20",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 52
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-21",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 51
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-22",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 54
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-23",
          "message": {
            "text": "Third parameter was not properly generated as prepared G C M.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.trustwallet.walletconnect.WCCipher.java",
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 54
                }
              },
              "fullyQualifiedLogicalName": "com::trustwallet::walletconnect::WCCipher::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-24",
          "message": {
            "text": "Third parameter was not properly generated as prepared O A E P.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.MnemonicKt.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 221
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::MnemonicKt::toSha256"
            }
          ],
          "ruleId": "IncompleteOperationError-16",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[]).",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.internal.Util.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 178
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::internal::Util::md5Hex"
            }
          ],
          "ruleId": "IncompleteOperationError-17",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[]).",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.internal.Util.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 177
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::internal::Util::md5Hex"
            }
          ],
          "ruleId": "ConstraintError-10",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.internal.Util.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 200
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::internal::Util::sha1"
            }
          ],
          "ruleId": "IncompleteOperationError-18",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[]).",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.squareup.okhttp.internal.Util.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 199
                }
              },
              "fullyQualifiedLogicalName": "com::squareup::okhttp::internal::Util::sha1"
            }
          ],
          "ruleId": "ConstraintError-11",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.bankwallet.core.managers.APIClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 208
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::bankwallet::core::managers::APIClient::setUnsafeSocketFactory"
            }
          ],
          "ruleId": "ConstraintError-12",
          "message": {
            "text": "First parameter (with value \"SSL\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.bankwallet.core.managers.APIClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 209
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::bankwallet::core::managers::APIClient::setUnsafeSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-25",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.bankwallet.core.managers.APIClient.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 209
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::bankwallet::core::managers::APIClient::setUnsafeSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-26",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 242
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-13",
          "message": {
            "text": "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 263
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "RequiredPredicateError-27",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 260
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-14",
          "message": {
            "text": "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.grpc.okhttp.OkHttpChannelBuilder.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 527
                }
              },
              "fullyQualifiedLogicalName": "io::grpc::okhttp::OkHttpChannelBuilder::createSslSocketFactory"
            }
          ],
          "ruleId": "IncompleteOperationError-19",
          "message": {
            "text": "Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.grpc.okhttp.OkHttpChannelBuilder.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 526
                }
              },
              "fullyQualifiedLogicalName": "io::grpc::okhttp::OkHttpChannelBuilder::createSslSocketFactory"
            }
          ],
          "ruleId": "ConstraintError-15",
          "message": {
            "text": "First parameter (with value \"Default\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.bitcoincore.utils.NetworkUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 75
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::bitcoincore::utils::NetworkUtils::getUnsafeOkHttpClient"
            }
          ],
          "ruleId": "RequiredPredicateError-28",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.bitcoincore.utils.NetworkUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 74
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::bitcoincore::utils::NetworkUtils::getUnsafeOkHttpClient"
            }
          ],
          "ruleId": "ConstraintError-16",
          "message": {
            "text": "First parameter (with value \"SSL\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.bitcoincore.utils.NetworkUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 75
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::bitcoincore::utils::NetworkUtils::getUnsafeOkHttpClient"
            }
          ],
          "ruleId": "RequiredPredicateError-29",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.Mnemonic.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 192
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::Mnemonic::hash"
            }
          ],
          "ruleId": "IncompleteOperationError-20",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest().",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "io.horizontalsystems.hdwalletkit.Mnemonic.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 192
                }
              },
              "fullyQualifiedLogicalName": "io::horizontalsystems::hdwalletkit::Mnemonic::hash"
            }
          ],
          "ruleId": "TypestateError-13",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jce.provider.X509CertificateObject.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jce::provider::X509CertificateObject::checkSignature"
            }
          ],
          "ruleId": "RequiredPredicateError-30",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator.java"
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::cert::crmf::jcajce::JcePKMACValuesCalculator::calculateMac"
            }
          ],
          "ruleId": "RequiredPredicateError-31",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509CertificateImpl::checkSignature"
            }
          ],
          "ruleId": "RequiredPredicateError-32",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.Signature."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.OpenJSSEPlatform.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 45
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::OpenJSSEPlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-33",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.MacHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 70
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::MacHashFunction::getMac"
            }
          ],
          "ruleId": "RequiredPredicateError-34",
          "message": {
            "text": "First parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jce.provider.X509SignatureUtil.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jce::provider::X509SignatureUtil::setSignatureParameters"
            }
          ],
          "ruleId": "RequiredPredicateError-35",
          "message": {
            "text": "First parameter was not properly generated as prepared Alg.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": -1
                }
              },
              "fullyQualifiedLogicalName": "org::bouncycastle::jcajce::provider::asymmetric::x509::X509SignatureUtil::setSignatureParameters"
            }
          ],
          "ruleId": "RequiredPredicateError-36",
          "message": {
            "text": "First parameter was not properly generated as prepared Alg.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}