{
  "sarifVersion" : "2.0.0",
  "runs" : [ {
    "files" : {
      "org/apache/poi/poifs/crypt/binaryrc4/BinaryRC4Decryptor.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/commons/codec/digest/DigestUtils.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/cryptoapi/CryptoAPIDecryptor.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/ChunkedCipherOutputStream.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/Decryptor.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/Encryptor.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/xor/XOREncryptor.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/standard/StandardDecryptor.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/xor/XORDecryptor.java" : {
        "mimeType" : "text/java"
      },
      "org/apache/poi/poifs/crypt/CryptoFunctions.java" : {
        "mimeType" : "text/java"
      },
      "androidx/biometric/CryptoObjectUtils.java" : {
        "mimeType" : "text/java"
      }
    },
    "resources" : {
      "rules" : {
        "TypestateError-4" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-5" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-1" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "TypestateError-2" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-1" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "TypestateError-3" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "ConstraintError-2" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-3" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "ConstraintError-4" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-9" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-8" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-11" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-7" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-10" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "TypestateError" : {
          "id" : "TypestateError",
          "fullDescription" : {
            "text" : "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
          }
        },
        "RequiredPredicateError-6" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-5" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-4" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-3" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "ConstraintError" : {
          "id" : "ConstraintError",
          "fullDescription" : {
            "text" : "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
          }
        },
        "RequiredPredicateError-2" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        },
        "RequiredPredicateError-1" : {
          "id" : "RequiredPredicateError",
          "fullDescription" : {
            "text" : "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
          }
        }
      }
    },
    "results" : [ {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "androidx/biometric/CryptoObjectUtils.java"
          },
          "region" : {
            "startLine" : 244
          }
        },
        "fullyQualifiedLogicalName" : "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
      } ],
      "ruleId" : "ConstraintError",
      "message" : {
        "text" : "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.KeyStore."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "androidx/biometric/CryptoObjectUtils.java"
          },
          "region" : {
            "startLine" : 265
          }
        },
        "fullyQualifiedLogicalName" : "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
      } ],
      "ruleId" : "RequiredPredicateError",
      "message" : {
        "text" : "Second parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "androidx/biometric/CryptoObjectUtils.java"
          },
          "region" : {
            "startLine" : 262
          }
        },
        "fullyQualifiedLogicalName" : "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
      } ],
      "ruleId" : "ConstraintError-1",
      "message" : {
        "text" : "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/commons/codec/digest/DigestUtils.java"
          },
          "region" : {
            "startLine" : 68
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::commons::codec::digest::DigestUtils::getDigest"
      } ],
      "ruleId" : "ConstraintError-2",
      "message" : {
        "text" : "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
        "richText" : "ConstraintError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/binaryrc4/BinaryRC4Decryptor.java"
          },
          "region" : {
            "startLine" : 128
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::binaryrc4::BinaryRC4Decryptor::generateSecretKey"
      } ],
      "ruleId" : "RequiredPredicateError-1",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/binaryrc4/BinaryRC4Decryptor.java"
          },
          "region" : {
            "startLine" : 127
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::binaryrc4::BinaryRC4Decryptor::generateSecretKey"
      } ],
      "ruleId" : "TypestateError",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/binaryrc4/BinaryRC4Decryptor.java"
          },
          "region" : {
            "startLine" : 127
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::binaryrc4::BinaryRC4Decryptor::generateSecretKey"
      } ],
      "ruleId" : "TypestateError-1",
      "message" : {
        "text" : "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[]).",
        "richText" : "TypestateError violating CrySL rule for java.security.MessageDigest."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/binaryrc4/BinaryRC4Decryptor.java"
          },
          "region" : {
            "startLine" : 102
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::binaryrc4::BinaryRC4Decryptor::initCipherForBlock"
      } ],
      "ruleId" : "RequiredPredicateError-2",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/ChunkedCipherOutputStream.java"
          },
          "region" : {
            "startLine" : 215
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::ChunkedCipherOutputStream::invokeCipher"
      } ],
      "ruleId" : "TypestateError-2",
      "message" : {
        "text" : "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/ChunkedCipherOutputStream.java"
          },
          "region" : {
            "startLine" : 215
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::ChunkedCipherOutputStream::invokeCipher"
      } ],
      "ruleId" : "TypestateError-3",
      "message" : {
        "text" : "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/ChunkedCipherOutputStream.java"
          },
          "region" : {
            "startLine" : 215
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::ChunkedCipherOutputStream::invokeCipher"
      } ],
      "ruleId" : "TypestateError-4",
      "message" : {
        "text" : "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/ChunkedCipherOutputStream.java"
          },
          "region" : {
            "startLine" : 215
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::ChunkedCipherOutputStream::invokeCipher"
      } ],
      "ruleId" : "TypestateError-5",
      "message" : {
        "text" : "Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
        "richText" : "TypestateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/xor/XORDecryptor.java"
          },
          "region" : {
            "startLine" : 52
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::xor::XORDecryptor::verifyPassword"
      } ],
      "ruleId" : "ConstraintError-3",
      "message" : {
        "text" : "Second parameter (with value \"XOR\") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/xor/XORDecryptor.java"
          },
          "region" : {
            "startLine" : 52
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::xor::XORDecryptor::verifyPassword"
      } ],
      "ruleId" : "RequiredPredicateError-3",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/xor/XOREncryptor.java"
          },
          "region" : {
            "startLine" : 51
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::xor::XOREncryptor::confirmPassword"
      } ],
      "ruleId" : "ConstraintError-4",
      "message" : {
        "text" : "Second parameter (with value \"XOR\") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}.",
        "richText" : "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/xor/XOREncryptor.java"
          },
          "region" : {
            "startLine" : 51
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::xor::XOREncryptor::confirmPassword"
      } ],
      "ruleId" : "RequiredPredicateError-4",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/CryptoFunctions.java"
          },
          "region" : {
            "startLine" : 240
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::CryptoFunctions::getCipher"
      } ],
      "ruleId" : "RequiredPredicateError-5",
      "message" : {
        "text" : "Second parameter was not properly generated as generated Key.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/CryptoFunctions.java"
          },
          "region" : {
            "startLine" : 246
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::CryptoFunctions::getCipher"
      } ],
      "ruleId" : "RequiredPredicateError-6",
      "message" : {
        "text" : "First parameter was not properly generated as randomized.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/cryptoapi/CryptoAPIDecryptor.java"
          },
          "region" : {
            "startLine" : 137
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::cryptoapi::CryptoAPIDecryptor::generateSecretKey"
      } ],
      "ruleId" : "RequiredPredicateError-7",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/cryptoapi/CryptoAPIDecryptor.java"
          },
          "region" : {
            "startLine" : 120
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::cryptoapi::CryptoAPIDecryptor::initCipherForBlock"
      } ],
      "ruleId" : "RequiredPredicateError-8",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/Decryptor.java"
          },
          "region" : {
            "startLine" : 192
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::Decryptor::clone"
      } ],
      "ruleId" : "RequiredPredicateError-9",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/Encryptor.java"
          },
          "region" : {
            "startLine" : 100
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::Encryptor::clone"
      } ],
      "ruleId" : "RequiredPredicateError-10",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    }, {
      "locations" : [ {
        "physicalLocation" : {
          "fileLocation" : {
            "uri" : "org/apache/poi/poifs/crypt/standard/StandardDecryptor.java"
          },
          "region" : {
            "startLine" : 101
          }
        },
        "fullyQualifiedLogicalName" : "org::apache::poi::poifs::crypt::standard::StandardDecryptor::generateSecretKey"
      } ],
      "ruleId" : "RequiredPredicateError-11",
      "message" : {
        "text" : "First parameter was not properly generated as prepared Key Material.",
        "richText" : "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
      }
    } ],
    "tool" : {
      "name" : "CryptoAnalysis",
      "semanticVersion" : null,
      "language" : "en-US",
      "version" : null
    }
  } ]
}