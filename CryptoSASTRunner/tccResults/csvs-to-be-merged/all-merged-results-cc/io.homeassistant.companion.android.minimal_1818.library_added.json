{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "okhttp3/internal/platform/ConscryptPlatform.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.java": {
          "mimeType": "text/java"
        },
        "com/google/android/gms/common/util/AndroidUtilsLight.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/BouncyCastlePlatform.java": {
          "mimeType": "text/java"
        },
        "com/google/android/exoplayer2/upstream/cache/CacheDataSource.java": {
          "mimeType": "text/java"
        },
        "com/google/android/exoplayer2/source/hls/Aes128DataSource.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/OpenJSSEPlatform.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/MacHashFunction.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/AbstractHashFunction.java": {
          "mimeType": "text/java"
        },
        "okhttp3/internal/platform/Platform.java": {
          "mimeType": "text/java"
        },
        "androidx/biometric/CryptoObjectUtils.java": {
          "mimeType": "text/java"
        },
        "com/google/common/hash/AbstractCompositeHashFunction.java": {
          "mimeType": "text/java"
        },
        "com/google/android/exoplayer2/upstream/cache/CachedContentIndex$LegacyStorage.java": {
          "mimeType": "text/java"
        },
        "okio/SegmentedByteString.java": {
          "mimeType": "text/java"
        },
        "com/google/android/exoplayer2/upstream/crypto/AesFlushingCipher.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "TypestateError-1": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "TypestateError-2": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "ConstraintError-1": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError-7": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "ConstraintError-2": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError-6": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "ConstraintError-3": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError-9": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "ConstraintError-4": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError-8": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "ConstraintError-5": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-11": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-6": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-10": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-13": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-12": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-1": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-3": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-10": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-2": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-5": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "IncompleteOperationError-4": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "RequiredPredicateError-15": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-14": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-16": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-9": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-8": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.gms.common.util.AndroidUtilsLight.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 12
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::gms::common::util::AndroidUtilsLight::zza"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.gms.common.util.AndroidUtilsLight.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 12
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::gms::common::util::AndroidUtilsLight::zza"
            }
          ],
          "ruleId": "IncompleteOperationError",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CacheDataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 776
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CacheDataSource::openNextSource"
            }
          ],
          "ruleId": "IncompleteOperationError-1",
          "message": {
            "text": "Operation on object of type javax.crypto.Cipher object not completed. Expected call to init.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CacheDataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 785
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CacheDataSource::openNextSource"
            }
          ],
          "ruleId": "IncompleteOperationError-2",
          "message": {
            "text": "Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CacheDataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 776
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CacheDataSource::openNextSource"
            }
          ],
          "ruleId": "IncompleteOperationError-3",
          "message": {
            "text": "Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CacheDataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 785
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CacheDataSource::openNextSource"
            }
          ],
          "ruleId": "IncompleteOperationError-4",
          "message": {
            "text": "Operation on object of type javax.crypto.Cipher object not completed. Expected call to init.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.source.hls.Aes128DataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 128
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::source::hls::Aes128DataSource::getCipherInstance"
            }
          ],
          "ruleId": "ConstraintError-1",
          "message": {
            "text": "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.source.hls.Aes128DataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 82
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::source::hls::Aes128DataSource::open"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.source.hls.Aes128DataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 86
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::source::hls::Aes128DataSource::open"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.source.hls.Aes128DataSource.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 83
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::source::hls::Aes128DataSource::open"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 160
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::MessageDigestHashFunction$MessageDigestHasher::hash"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 161
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::MessageDigestHashFunction$MessageDigestHasher::hash"
            }
          ],
          "ruleId": "TypestateError-1",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractHashFunction::hashObject"
            }
          ],
          "ruleId": "IncompleteOperationError-5",
          "message": {
            "text": "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractHashFunction::hashObject"
            }
          ],
          "ruleId": "IncompleteOperationError-6",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractCompositeHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 58
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractCompositeHashFunction::newHasher"
            }
          ],
          "ruleId": "IncompleteOperationError-7",
          "message": {
            "text": "Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.Mac."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.AbstractCompositeHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 58
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::AbstractCompositeHashFunction::newHasher"
            }
          ],
          "ruleId": "IncompleteOperationError-8",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.SegmentedByteString.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 56
                }
              },
              "fullyQualifiedLogicalName": "okio::SegmentedByteString::digest$okio"
            }
          ],
          "ruleId": "TypestateError-2",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 620
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CachedContentIndex$LegacyStorage::readFile"
            }
          ],
          "ruleId": "IncompleteOperationError-9",
          "message": {
            "text": "Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 614
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CachedContentIndex$LegacyStorage::readFile"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 676
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CachedContentIndex$LegacyStorage::writeFile"
            }
          ],
          "ruleId": "IncompleteOperationError-10",
          "message": {
            "text": "Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 668
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::cache::CachedContentIndex$LegacyStorage::writeFile"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 242
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-2",
          "message": {
            "text": "First parameter (with value \"AndroidKeyStore\") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyStore."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 263
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "androidx.biometric.CryptoObjectUtils.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 260
                }
              },
              "fullyQualifiedLogicalName": "androidx::biometric::CryptoObjectUtils::createFakeCryptoObject"
            }
          ],
          "ruleId": "ConstraintError-3",
          "message": {
            "text": "First parameter (with value \"AES/CBC/PKCS7Padding\") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 75
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-4",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 80
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 168
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 168
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-8",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.Platform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 168
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::Platform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-9",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 44
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-5",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 104
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::newSslSocketFactory"
            }
          ],
          "ruleId": "RequiredPredicateError-10",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.ConscryptPlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 48
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::ConscryptPlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-11",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.BouncyCastlePlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 38
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::BouncyCastlePlatform::newSSLContext"
            }
          ],
          "ruleId": "ConstraintError-6",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.BouncyCastlePlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 43
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::BouncyCastlePlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-12",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 55
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::crypto::AesFlushingCipher::<init>"
            }
          ],
          "ruleId": "RequiredPredicateError-13",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 56
                }
              },
              "fullyQualifiedLogicalName": "com::google::android::exoplayer2::upstream::crypto::AesFlushingCipher::<init>"
            }
          ],
          "ruleId": "RequiredPredicateError-14",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okhttp3.internal.platform.OpenJSSEPlatform.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 45
                }
              },
              "fullyQualifiedLogicalName": "okhttp3::internal::platform::OpenJSSEPlatform::platformTrustManager"
            }
          ],
          "ruleId": "RequiredPredicateError-15",
          "message": {
            "text": "First parameter was not properly generated as generated Key Store.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "com.google.common.hash.MacHashFunction.java",
                  "externalLibrary": true,
                  "PossibleExternalLibrary": true
                },
                "region": {
                  "startLine": 70
                }
              },
              "fullyQualifiedLogicalName": "com::google::common::hash::MacHashFunction::getMac"
            }
          ],
          "ruleId": "RequiredPredicateError-16",
          "message": {
            "text": "First parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Mac."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}