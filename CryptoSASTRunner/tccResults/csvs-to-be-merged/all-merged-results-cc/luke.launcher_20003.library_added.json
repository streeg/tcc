{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "a.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "NeverTypeOfError": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "TypestateError-1": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "HardCodedError": {
            "id": "HardCodedError",
            "fullDescription": {
              "text": null
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "IncompleteOperationError": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 80
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 76
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 77
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "Third parameter was not properly generated as prepared I V.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 77
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 40
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "NeverTypeOfError",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 40
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "HardCodedError",
          "message": {
            "text": "First parameter should never be hardcoded..",
            "richText": "HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 44
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "First parameter was not properly generated as specced Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 44
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "IncompleteOperationError",
          "message": {
            "text": "Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword.",
            "richText": "IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 40
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "Second parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 43
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "First parameter (with value \"PBKDF2WithHmacSHA1\") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 113
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "TypestateError-1",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 110
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "First parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "a.java"
                },
                "region": {
                  "startLine": 111
                }
              },
              "fullyQualifiedLogicalName": "a::a"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}