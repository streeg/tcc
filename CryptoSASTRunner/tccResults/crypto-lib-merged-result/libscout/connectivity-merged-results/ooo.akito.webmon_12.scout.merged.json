{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "org/apache/hc/client5/http/impl/auth/HttpEntityDigester.java": {
          "mimeType": "text/java"
        },
        "org/minidns/dnssec/algorithms/AlgorithmMap.java": {
          "mimeType": "text/java"
        },
        "org/apache/hc/client5/http/impl/auth/DigestScheme.java": {
          "mimeType": "text/java"
        },
        "org/apache/hc/core5/ssl/SSLContexts.java": {
          "mimeType": "text/java"
        },
        "okio/ByteString.java": {
          "mimeType": "text/java"
        },
        "org/minidns/dnssec/algorithms/JavaSecSignatureVerifier.java": {
          "mimeType": "text/java"
        },
        "org/minidns/dnssec/algorithms/JavaSecDigestCalculator.java": {
          "mimeType": "text/java"
        },
        "org/apache/hc/client5/http/impl/auth/NTLMEngineImpl.java": {
          "mimeType": "text/java"
        },
        "org/apache/hc/client5/http/impl/auth/NTLMEngineImpl$CipherGen.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "TypestateError-4": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "TypestateError-5": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "NeverTypeOfError-1": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "ConstraintError-11": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-12": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-10": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "TypestateError-1": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "TypestateError-2": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "ConstraintError-1": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "TypestateError-3": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "ConstraintError-2": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-3": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-4": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-5": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError-6": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-7": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-8": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "ConstraintError-9": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "IncompleteOperationError": {
            "id": "IncompleteOperationError",
            "fullDescription": {
              "text": "The usage of an object may be incomplete: For example a Cipherobject may be initialized but never used for en- or decryption, this may render the code dead. This error heavily depends on the computed call graph (CHA by default)"
            }
          },
          "NeverTypeOfError-2": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "NeverTypeOfError-3": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "NeverTypeOfError": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "RequiredPredicateError-9": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-8": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "ConstraintError": {
            "id": "ConstraintError",
            "fullDescription": {
              "text": "A constraint of a CrySL rule is violated, e.g., a key is generated with the wrong key size."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.core5.ssl.SSLContexts.java"
                },
                "region": {
                  "startLine": 67
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::core5::ssl::SSLContexts::createDefault"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "Third parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.core5.ssl.SSLContexts.java"
                },
                "region": {
                  "startLine": 67
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::core5::ssl::SSLContexts::createDefault"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "First parameter was not properly generated as generated Key Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.core5.ssl.SSLContexts.java"
                },
                "region": {
                  "startLine": 67
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::core5::ssl::SSLContexts::createDefault"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "Second parameter was not properly generated as generated Trust Managers.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.core5.ssl.SSLContexts.java"
                },
                "region": {
                  "startLine": 66
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::core5::ssl::SSLContexts::createDefault"
            }
          ],
          "ruleId": "ConstraintError",
          "message": {
            "text": "First parameter (with value \"TLS\") should be any of {TLSv1.2, TLSv1.3}.",
            "richText": "ConstraintError violating CrySL rule for javax.net.ssl.SSLContext."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 156
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest"
            }
          ],
          "ruleId": "ConstraintError-1",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "okio.ByteString.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 156
                }
              },
              "fullyQualifiedLogicalName": "okio::ByteString::digest"
            }
          ],
          "ruleId": "ConstraintError-2",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.DigestScheme.java"
                },
                "region": {
                  "startLine": 212
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::DigestScheme::createMessageDigest"
            }
          ],
          "ruleId": "ConstraintError-3",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.HttpEntityDigester.java"
                },
                "region": {
                  "startLine": 67
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::HttpEntityDigester::close"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte).",
            "richText": "TypestateError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 610
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "NeverTypeOfError",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 610
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "ConstraintError-4",
          "message": {
            "text": "Second parameter (with value \"RC4\") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 610
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "NeverTypeOfError-1",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 611
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "TypestateError-1",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 609
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "ConstraintError-5",
          "message": {
            "text": "First parameter (with value \"RC4\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 610
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "NeverTypeOfError-2",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 610
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 610
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 610
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::RC4"
            }
          ],
          "ruleId": "NeverTypeOfError-3",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 1847
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::getMD5"
            }
          ],
          "ruleId": "ConstraintError-6",
          "message": {
            "text": "First parameter (with value \"MD5\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 1042
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::createDESKey"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 1042
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::createDESKey"
            }
          ],
          "ruleId": "ConstraintError-7",
          "message": {
            "text": "Second parameter (with value \"DES\") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 757
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::lmResponse"
            }
          ],
          "ruleId": "ConstraintError-8",
          "message": {
            "text": "First parameter (with value \"DES/ECB/NoPadding\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 760
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::lmResponse"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 759
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::lmResponse"
            }
          ],
          "ruleId": "TypestateError-2",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 666
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::lmHash"
            }
          ],
          "ruleId": "ConstraintError-9",
          "message": {
            "text": "First parameter (with value \"DES/ECB/NoPadding\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 669
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::lmHash"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl.java"
                },
                "region": {
                  "startLine": 668
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl::lmHash"
            }
          ],
          "ruleId": "TypestateError-3",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen.java"
                },
                "region": {
                  "startLine": 582
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl$CipherGen::getLanManagerSessionKey"
            }
          ],
          "ruleId": "RequiredPredicateError-8",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen.java"
                },
                "region": {
                  "startLine": 581
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl$CipherGen::getLanManagerSessionKey"
            }
          ],
          "ruleId": "ConstraintError-10",
          "message": {
            "text": "First parameter (with value \"DES/ECB/NoPadding\") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}.",
            "richText": "ConstraintError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen.java"
                },
                "region": {
                  "startLine": 583
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl$CipherGen::getLanManagerSessionKey"
            }
          ],
          "ruleId": "TypestateError-4",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen.java"
                },
                "region": {
                  "startLine": 586
                }
              },
              "fullyQualifiedLogicalName": "org::apache::hc::client5::http::impl::auth::NTLMEngineImpl$CipherGen::getLanManagerSessionKey"
            }
          ],
          "ruleId": "TypestateError-5",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.minidns.dnssec.algorithms.JavaSecDigestCalculator.java"
                },
                "region": {
                  "startLine": 22
                }
              },
              "fullyQualifiedLogicalName": "org::minidns::dnssec::algorithms::JavaSecDigestCalculator::<init>"
            }
          ],
          "ruleId": "ConstraintError-11",
          "message": {
            "text": "First parameter (with value \"SHA-1\") should be any of {SHA-256, SHA-384, SHA-512}.",
            "richText": "ConstraintError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.minidns.dnssec.algorithms.AlgorithmMap.java"
                },
                "region": {
                  "startLine": 45
                }
              },
              "fullyQualifiedLogicalName": "org::minidns::dnssec::algorithms::AlgorithmMap::<init>"
            }
          ],
          "ruleId": "IncompleteOperationError",
          "message": {
            "text": "Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update.",
            "richText": "IncompleteOperationError violating CrySL rule for java.security.MessageDigest."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.minidns.dnssec.algorithms.JavaSecSignatureVerifier.java"
                },
                "region": {
                  "startLine": 32
                }
              },
              "fullyQualifiedLogicalName": "org::minidns::dnssec::algorithms::JavaSecSignatureVerifier::<init>"
            }
          ],
          "ruleId": "ConstraintError-12",
          "message": {
            "text": "First parameter (with value \"ECGOST3410\") should be any of {RSA, DiffieHellman, DH, DSA, EC}.",
            "richText": "ConstraintError violating CrySL rule for java.security.KeyFactory."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "org.minidns.dnssec.algorithms.JavaSecSignatureVerifier.java"
                },
                "region": {
                  "startLine": 48
                }
              },
              "fullyQualifiedLogicalName": "org::minidns::dnssec::algorithms::JavaSecSignatureVerifier::verify"
            }
          ],
          "ruleId": "RequiredPredicateError-9",
          "message": {
            "text": "First parameter was not properly generated as generated Pubkey.",
            "richText": "RequiredPredicateError violating CrySL rule for java.security.Signature."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}