{
  "sarifVersion": "2.0.0",
  "runs": [
    {
      "files": {
        "net/dcnnt/core/CommonKt.java": {
          "mimeType": "text/java"
        }
      },
      "resources": {
        "rules": {
          "RequiredPredicateError": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "NeverTypeOfError": {
            "id": "NeverTypeOfError",
            "fullDescription": {
              "text": "Reported when a value was found to be of a certain reference type: For example, a character array containing a password should never be converted from a String"
            }
          },
          "RequiredPredicateError-7": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          },
          "RequiredPredicateError-6": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-5": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-4": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-3": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-2": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "RequiredPredicateError-1": {
            "id": "RequiredPredicateError",
            "fullDescription": {
              "text": "An object A expects an object B to have been used correctly (CrySL blocks REQUIRES and ENSURES). For example a Cipher object requires a SecretKey object to be correctly and securely generated."
            }
          },
          "TypestateError-1": {
            "id": "TypestateError",
            "fullDescription": {
              "text": "The ORDER block of CrySL is violated, i.e., the expected method sequence call to be made is incorrect. For example, a Signature object expects a call to initSign(key) prior to update(data)."
            }
          }
        }
      },
      "results": [
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 45
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 48
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-1",
          "message": {
            "text": "Third parameter was not properly generated as prepared G C M.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 48
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-2",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 46
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::decrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-3",
          "message": {
            "text": "Second parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 50
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::decrypt"
            }
          ],
          "ruleId": "TypestateError",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 45
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::decrypt"
            }
          ],
          "ruleId": "NeverTypeOfError",
          "message": {
            "text": "First parameter should never be of type java.lang.String..",
            "richText": "NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 35
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::encrypt"
            }
          ],
          "ruleId": "TypestateError-1",
          "message": {
            "text": "Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD.",
            "richText": "TypestateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 33
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-4",
          "message": {
            "text": "Second parameter was not properly generated as randomized.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 32
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-5",
          "message": {
            "text": "First parameter was not properly generated as prepared Key Material.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 34
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-6",
          "message": {
            "text": "Second parameter was not properly generated as generated Key.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        },
        {
          "locations": [
            {
              "physicalLocation": {
                "fileLocation": {
                  "uri": "net.dcnnt.core.CommonKt.java",
                  "externalLibrary": true
                },
                "region": {
                  "startLine": 34
                }
              },
              "fullyQualifiedLogicalName": "net::dcnnt::core::CommonKt::encrypt"
            }
          ],
          "ruleId": "RequiredPredicateError-7",
          "message": {
            "text": "Third parameter was not properly generated as prepared G C M.",
            "richText": "RequiredPredicateError violating CrySL rule for javax.crypto.Cipher."
          }
        }
      ],
      "tool": {
        "name": "CryptoAnalysis",
        "semanticVersion": null,
        "language": "en-US",
        "version": null
      }
    }
  ]
}